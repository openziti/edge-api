// Code generated by go-swagger; DO NOT EDIT.

//
// Copyright NetFoundry Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// __          __              _
// \ \        / /             (_)
//  \ \  /\  / /_ _ _ __ _ __  _ _ __   __ _
//   \ \/  \/ / _` | '__| '_ \| | '_ \ / _` |
//    \  /\  / (_| | |  | | | | | | | | (_| | : This file is generated, do not edit it.
//     \/  \/ \__,_|_|  |_| |_|_|_| |_|\__, |
//                                      __/ |
//                                     |___/

package o_id_c_authentication

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/openziti/edge-api/rest_model"
)

// VerifyTotpOKCode is the HTTP code returned for type VerifyTotpOK
const VerifyTotpOKCode int = 200

/*VerifyTotpOK TOTP verification result (HTML response)

swagger:response verifyTotpOK
*/
type VerifyTotpOK struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewVerifyTotpOK creates VerifyTotpOK with default headers values
func NewVerifyTotpOK() *VerifyTotpOK {

	return &VerifyTotpOK{}
}

// WithPayload adds the payload to the verify totp o k response
func (o *VerifyTotpOK) WithPayload(payload string) *VerifyTotpOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the verify totp o k response
func (o *VerifyTotpOK) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *VerifyTotpOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// VerifyTotpFoundCode is the HTTP code returned for type VerifyTotpFound
const VerifyTotpFoundCode int = 302

/*VerifyTotpFound Redirect to callback URL on successful verification

swagger:response verifyTotpFound
*/
type VerifyTotpFound struct {
	/*Callback URL

	 */
	Location string `json:"Location"`
}

// NewVerifyTotpFound creates VerifyTotpFound with default headers values
func NewVerifyTotpFound() *VerifyTotpFound {

	return &VerifyTotpFound{}
}

// WithLocation adds the location to the verify totp found response
func (o *VerifyTotpFound) WithLocation(location string) *VerifyTotpFound {
	o.Location = location
	return o
}

// SetLocation sets the location to the verify totp found response
func (o *VerifyTotpFound) SetLocation(location string) {
	o.Location = location
}

// WriteResponse to the client
func (o *VerifyTotpFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header Location

	location := o.Location
	if location != "" {
		rw.Header().Set("Location", location)
	}

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(302)
}

// VerifyTotpBadRequestCode is the HTTP code returned for type VerifyTotpBadRequest
const VerifyTotpBadRequestCode int = 400

/*VerifyTotpBadRequest The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error's code, message, and cause fields can be inspected for further information

swagger:response verifyTotpBadRequest
*/
type VerifyTotpBadRequest struct {

	/*
	  In: Body
	*/
	Payload *rest_model.APIErrorEnvelope `json:"body,omitempty"`
}

// NewVerifyTotpBadRequest creates VerifyTotpBadRequest with default headers values
func NewVerifyTotpBadRequest() *VerifyTotpBadRequest {

	return &VerifyTotpBadRequest{}
}

// WithPayload adds the payload to the verify totp bad request response
func (o *VerifyTotpBadRequest) WithPayload(payload *rest_model.APIErrorEnvelope) *VerifyTotpBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the verify totp bad request response
func (o *VerifyTotpBadRequest) SetPayload(payload *rest_model.APIErrorEnvelope) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *VerifyTotpBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// VerifyTotpUnauthorizedCode is the HTTP code returned for type VerifyTotpUnauthorized
const VerifyTotpUnauthorizedCode int = 401

/*VerifyTotpUnauthorized The authentication request could not be processed as the credentials are invalid

swagger:response verifyTotpUnauthorized
*/
type VerifyTotpUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *rest_model.APIErrorEnvelope `json:"body,omitempty"`
}

// NewVerifyTotpUnauthorized creates VerifyTotpUnauthorized with default headers values
func NewVerifyTotpUnauthorized() *VerifyTotpUnauthorized {

	return &VerifyTotpUnauthorized{}
}

// WithPayload adds the payload to the verify totp unauthorized response
func (o *VerifyTotpUnauthorized) WithPayload(payload *rest_model.APIErrorEnvelope) *VerifyTotpUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the verify totp unauthorized response
func (o *VerifyTotpUnauthorized) SetPayload(payload *rest_model.APIErrorEnvelope) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *VerifyTotpUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
