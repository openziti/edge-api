// Code generated by go-swagger; DO NOT EDIT.

//
// Copyright NetFoundry Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// __          __              _
// \ \        / /             (_)
//  \ \  /\  / /_ _ _ __ _ __  _ _ __   __ _
//   \ \/  \/ / _` | '__| '_ \| | '_ \ / _` |
//    \  /\  / (_| | |  | | | | | | | | (_| | : This file is generated, do not edit it.
//     \/  \/ \__,_|_|  |_| |_|_|_| |_|\__, |
//                                      __/ |
//                                     |___/

package o_id_c_authentication

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/openziti/edge-api/rest_model"
)

// VerifyTotpReader is a Reader for the VerifyTotp structure.
type VerifyTotpReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *VerifyTotpReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewVerifyTotpOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 302:
		result := NewVerifyTotpFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 400:
		result := NewVerifyTotpBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewVerifyTotpUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewVerifyTotpOK creates a VerifyTotpOK with default headers values
func NewVerifyTotpOK() *VerifyTotpOK {
	return &VerifyTotpOK{}
}

/* VerifyTotpOK describes a response with status code 200, with default header values.

TOTP verification result (HTML response)
*/
type VerifyTotpOK struct {
	Payload string
}

func (o *VerifyTotpOK) Error() string {
	return fmt.Sprintf("[POST /totp][%d] verifyTotpOK  %+v", 200, o.Payload)
}
func (o *VerifyTotpOK) GetPayload() string {
	return o.Payload
}

func (o *VerifyTotpOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewVerifyTotpFound creates a VerifyTotpFound with default headers values
func NewVerifyTotpFound() *VerifyTotpFound {
	return &VerifyTotpFound{}
}

/* VerifyTotpFound describes a response with status code 302, with default header values.

Redirect to callback URL on successful verification
*/
type VerifyTotpFound struct {

	/* Callback URL
	 */
	Location string
}

func (o *VerifyTotpFound) Error() string {
	return fmt.Sprintf("[POST /totp][%d] verifyTotpFound ", 302)
}

func (o *VerifyTotpFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Location
	hdrLocation := response.GetHeader("Location")

	if hdrLocation != "" {
		o.Location = hdrLocation
	}

	return nil
}

// NewVerifyTotpBadRequest creates a VerifyTotpBadRequest with default headers values
func NewVerifyTotpBadRequest() *VerifyTotpBadRequest {
	return &VerifyTotpBadRequest{}
}

/* VerifyTotpBadRequest describes a response with status code 400, with default header values.

The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error's code, message, and cause fields can be inspected for further information
*/
type VerifyTotpBadRequest struct {
	Payload *rest_model.APIErrorEnvelope
}

func (o *VerifyTotpBadRequest) Error() string {
	return fmt.Sprintf("[POST /totp][%d] verifyTotpBadRequest  %+v", 400, o.Payload)
}
func (o *VerifyTotpBadRequest) GetPayload() *rest_model.APIErrorEnvelope {
	return o.Payload
}

func (o *VerifyTotpBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(rest_model.APIErrorEnvelope)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewVerifyTotpUnauthorized creates a VerifyTotpUnauthorized with default headers values
func NewVerifyTotpUnauthorized() *VerifyTotpUnauthorized {
	return &VerifyTotpUnauthorized{}
}

/* VerifyTotpUnauthorized describes a response with status code 401, with default header values.

The authentication request could not be processed as the credentials are invalid
*/
type VerifyTotpUnauthorized struct {
	Payload *rest_model.APIErrorEnvelope
}

func (o *VerifyTotpUnauthorized) Error() string {
	return fmt.Sprintf("[POST /totp][%d] verifyTotpUnauthorized  %+v", 401, o.Payload)
}
func (o *VerifyTotpUnauthorized) GetPayload() *rest_model.APIErrorEnvelope {
	return o.Payload
}

func (o *VerifyTotpUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(rest_model.APIErrorEnvelope)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
