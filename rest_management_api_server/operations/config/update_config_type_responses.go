// Code generated by go-swagger; DO NOT EDIT.

//
// Copyright NetFoundry Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// __          __              _
// \ \        / /             (_)
//  \ \  /\  / /_ _ _ __ _ __  _ _ __   __ _
//   \ \/  \/ / _` | '__| '_ \| | '_ \ / _` |
//    \  /\  / (_| | |  | | | | | | | | (_| | : This file is generated, do not edit it.
//     \/  \/ \__,_|_|  |_| |_|_|_| |_|\__, |
//                                      __/ |
//                                     |___/

package config

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/openziti/edge-api/rest_model"
)

// UpdateConfigTypeOKCode is the HTTP code returned for type UpdateConfigTypeOK
const UpdateConfigTypeOKCode int = 200

/*UpdateConfigTypeOK The update request was successful and the resource has been altered

swagger:response updateConfigTypeOK
*/
type UpdateConfigTypeOK struct {

	/*
	  In: Body
	*/
	Payload *rest_model.Empty `json:"body,omitempty"`
}

// NewUpdateConfigTypeOK creates UpdateConfigTypeOK with default headers values
func NewUpdateConfigTypeOK() *UpdateConfigTypeOK {

	return &UpdateConfigTypeOK{}
}

// WithPayload adds the payload to the update config type o k response
func (o *UpdateConfigTypeOK) WithPayload(payload *rest_model.Empty) *UpdateConfigTypeOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update config type o k response
func (o *UpdateConfigTypeOK) SetPayload(payload *rest_model.Empty) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateConfigTypeOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateConfigTypeBadRequestCode is the HTTP code returned for type UpdateConfigTypeBadRequest
const UpdateConfigTypeBadRequestCode int = 400

/*UpdateConfigTypeBadRequest The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error's code, message, and cause fields can be inspected for further information

swagger:response updateConfigTypeBadRequest
*/
type UpdateConfigTypeBadRequest struct {

	/*
	  In: Body
	*/
	Payload *rest_model.APIErrorEnvelope `json:"body,omitempty"`
}

// NewUpdateConfigTypeBadRequest creates UpdateConfigTypeBadRequest with default headers values
func NewUpdateConfigTypeBadRequest() *UpdateConfigTypeBadRequest {

	return &UpdateConfigTypeBadRequest{}
}

// WithPayload adds the payload to the update config type bad request response
func (o *UpdateConfigTypeBadRequest) WithPayload(payload *rest_model.APIErrorEnvelope) *UpdateConfigTypeBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update config type bad request response
func (o *UpdateConfigTypeBadRequest) SetPayload(payload *rest_model.APIErrorEnvelope) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateConfigTypeBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateConfigTypeUnauthorizedCode is the HTTP code returned for type UpdateConfigTypeUnauthorized
const UpdateConfigTypeUnauthorizedCode int = 401

/*UpdateConfigTypeUnauthorized The supplied session does not have the correct access rights to request this resource

swagger:response updateConfigTypeUnauthorized
*/
type UpdateConfigTypeUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *rest_model.APIErrorEnvelope `json:"body,omitempty"`
}

// NewUpdateConfigTypeUnauthorized creates UpdateConfigTypeUnauthorized with default headers values
func NewUpdateConfigTypeUnauthorized() *UpdateConfigTypeUnauthorized {

	return &UpdateConfigTypeUnauthorized{}
}

// WithPayload adds the payload to the update config type unauthorized response
func (o *UpdateConfigTypeUnauthorized) WithPayload(payload *rest_model.APIErrorEnvelope) *UpdateConfigTypeUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update config type unauthorized response
func (o *UpdateConfigTypeUnauthorized) SetPayload(payload *rest_model.APIErrorEnvelope) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateConfigTypeUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateConfigTypeNotFoundCode is the HTTP code returned for type UpdateConfigTypeNotFound
const UpdateConfigTypeNotFoundCode int = 404

/*UpdateConfigTypeNotFound The requested resource does not exist

swagger:response updateConfigTypeNotFound
*/
type UpdateConfigTypeNotFound struct {

	/*
	  In: Body
	*/
	Payload *rest_model.APIErrorEnvelope `json:"body,omitempty"`
}

// NewUpdateConfigTypeNotFound creates UpdateConfigTypeNotFound with default headers values
func NewUpdateConfigTypeNotFound() *UpdateConfigTypeNotFound {

	return &UpdateConfigTypeNotFound{}
}

// WithPayload adds the payload to the update config type not found response
func (o *UpdateConfigTypeNotFound) WithPayload(payload *rest_model.APIErrorEnvelope) *UpdateConfigTypeNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update config type not found response
func (o *UpdateConfigTypeNotFound) SetPayload(payload *rest_model.APIErrorEnvelope) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateConfigTypeNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateConfigTypeTooManyRequestsCode is the HTTP code returned for type UpdateConfigTypeTooManyRequests
const UpdateConfigTypeTooManyRequestsCode int = 429

/*UpdateConfigTypeTooManyRequests The resource requested is rate limited and the rate limit has been exceeded

swagger:response updateConfigTypeTooManyRequests
*/
type UpdateConfigTypeTooManyRequests struct {

	/*
	  In: Body
	*/
	Payload *rest_model.APIErrorEnvelope `json:"body,omitempty"`
}

// NewUpdateConfigTypeTooManyRequests creates UpdateConfigTypeTooManyRequests with default headers values
func NewUpdateConfigTypeTooManyRequests() *UpdateConfigTypeTooManyRequests {

	return &UpdateConfigTypeTooManyRequests{}
}

// WithPayload adds the payload to the update config type too many requests response
func (o *UpdateConfigTypeTooManyRequests) WithPayload(payload *rest_model.APIErrorEnvelope) *UpdateConfigTypeTooManyRequests {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update config type too many requests response
func (o *UpdateConfigTypeTooManyRequests) SetPayload(payload *rest_model.APIErrorEnvelope) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateConfigTypeTooManyRequests) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(429)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateConfigTypeServiceUnavailableCode is the HTTP code returned for type UpdateConfigTypeServiceUnavailable
const UpdateConfigTypeServiceUnavailableCode int = 503

/*UpdateConfigTypeServiceUnavailable The request could not be completed due to the server being busy or in a temporarily bad state

swagger:response updateConfigTypeServiceUnavailable
*/
type UpdateConfigTypeServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *rest_model.APIErrorEnvelope `json:"body,omitempty"`
}

// NewUpdateConfigTypeServiceUnavailable creates UpdateConfigTypeServiceUnavailable with default headers values
func NewUpdateConfigTypeServiceUnavailable() *UpdateConfigTypeServiceUnavailable {

	return &UpdateConfigTypeServiceUnavailable{}
}

// WithPayload adds the payload to the update config type service unavailable response
func (o *UpdateConfigTypeServiceUnavailable) WithPayload(payload *rest_model.APIErrorEnvelope) *UpdateConfigTypeServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update config type service unavailable response
func (o *UpdateConfigTypeServiceUnavailable) SetPayload(payload *rest_model.APIErrorEnvelope) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateConfigTypeServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
