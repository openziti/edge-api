// Code generated by go-swagger; DO NOT EDIT.

//
// Copyright NetFoundry Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// __          __              _
// \ \        / /             (_)
//  \ \  /\  / /_ _ _ __ _ __  _ _ __   __ _
//   \ \/  \/ / _` | '__| '_ \| | '_ \ / _` |
//    \  /\  / (_| | |  | | | | | | | | (_| | : This file is generated, do not edit it.
//     \/  \/ \__,_|_|  |_| |_|_|_| |_|\__, |
//                                      __/ |
//                                     |___/

package config

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/openziti/edge-api/rest_model"
)

// DeleteConfigOKCode is the HTTP code returned for type DeleteConfigOK
const DeleteConfigOKCode int = 200

/*DeleteConfigOK The delete request was successful and the resource has been removed

swagger:response deleteConfigOK
*/
type DeleteConfigOK struct {

	/*
	  In: Body
	*/
	Payload *rest_model.Empty `json:"body,omitempty"`
}

// NewDeleteConfigOK creates DeleteConfigOK with default headers values
func NewDeleteConfigOK() *DeleteConfigOK {

	return &DeleteConfigOK{}
}

// WithPayload adds the payload to the delete config o k response
func (o *DeleteConfigOK) WithPayload(payload *rest_model.Empty) *DeleteConfigOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete config o k response
func (o *DeleteConfigOK) SetPayload(payload *rest_model.Empty) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteConfigOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteConfigBadRequestCode is the HTTP code returned for type DeleteConfigBadRequest
const DeleteConfigBadRequestCode int = 400

/*DeleteConfigBadRequest The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error's code, message, and cause fields can be inspected for further information

swagger:response deleteConfigBadRequest
*/
type DeleteConfigBadRequest struct {

	/*
	  In: Body
	*/
	Payload *rest_model.APIErrorEnvelope `json:"body,omitempty"`
}

// NewDeleteConfigBadRequest creates DeleteConfigBadRequest with default headers values
func NewDeleteConfigBadRequest() *DeleteConfigBadRequest {

	return &DeleteConfigBadRequest{}
}

// WithPayload adds the payload to the delete config bad request response
func (o *DeleteConfigBadRequest) WithPayload(payload *rest_model.APIErrorEnvelope) *DeleteConfigBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete config bad request response
func (o *DeleteConfigBadRequest) SetPayload(payload *rest_model.APIErrorEnvelope) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteConfigBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteConfigUnauthorizedCode is the HTTP code returned for type DeleteConfigUnauthorized
const DeleteConfigUnauthorizedCode int = 401

/*DeleteConfigUnauthorized The supplied session does not have the correct access rights to request this resource

swagger:response deleteConfigUnauthorized
*/
type DeleteConfigUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *rest_model.APIErrorEnvelope `json:"body,omitempty"`
}

// NewDeleteConfigUnauthorized creates DeleteConfigUnauthorized with default headers values
func NewDeleteConfigUnauthorized() *DeleteConfigUnauthorized {

	return &DeleteConfigUnauthorized{}
}

// WithPayload adds the payload to the delete config unauthorized response
func (o *DeleteConfigUnauthorized) WithPayload(payload *rest_model.APIErrorEnvelope) *DeleteConfigUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete config unauthorized response
func (o *DeleteConfigUnauthorized) SetPayload(payload *rest_model.APIErrorEnvelope) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteConfigUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteConfigNotFoundCode is the HTTP code returned for type DeleteConfigNotFound
const DeleteConfigNotFoundCode int = 404

/*DeleteConfigNotFound The requested resource does not exist

swagger:response deleteConfigNotFound
*/
type DeleteConfigNotFound struct {

	/*
	  In: Body
	*/
	Payload *rest_model.APIErrorEnvelope `json:"body,omitempty"`
}

// NewDeleteConfigNotFound creates DeleteConfigNotFound with default headers values
func NewDeleteConfigNotFound() *DeleteConfigNotFound {

	return &DeleteConfigNotFound{}
}

// WithPayload adds the payload to the delete config not found response
func (o *DeleteConfigNotFound) WithPayload(payload *rest_model.APIErrorEnvelope) *DeleteConfigNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete config not found response
func (o *DeleteConfigNotFound) SetPayload(payload *rest_model.APIErrorEnvelope) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteConfigNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteConfigConflictCode is the HTTP code returned for type DeleteConfigConflict
const DeleteConfigConflictCode int = 409

/*DeleteConfigConflict The resource requested to be removed/altered cannot be as it is referenced by another object.

swagger:response deleteConfigConflict
*/
type DeleteConfigConflict struct {

	/*
	  In: Body
	*/
	Payload *rest_model.APIErrorEnvelope `json:"body,omitempty"`
}

// NewDeleteConfigConflict creates DeleteConfigConflict with default headers values
func NewDeleteConfigConflict() *DeleteConfigConflict {

	return &DeleteConfigConflict{}
}

// WithPayload adds the payload to the delete config conflict response
func (o *DeleteConfigConflict) WithPayload(payload *rest_model.APIErrorEnvelope) *DeleteConfigConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete config conflict response
func (o *DeleteConfigConflict) SetPayload(payload *rest_model.APIErrorEnvelope) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteConfigConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteConfigTooManyRequestsCode is the HTTP code returned for type DeleteConfigTooManyRequests
const DeleteConfigTooManyRequestsCode int = 429

/*DeleteConfigTooManyRequests The resource requested is rate limited and the rate limit has been exceeded

swagger:response deleteConfigTooManyRequests
*/
type DeleteConfigTooManyRequests struct {

	/*
	  In: Body
	*/
	Payload *rest_model.APIErrorEnvelope `json:"body,omitempty"`
}

// NewDeleteConfigTooManyRequests creates DeleteConfigTooManyRequests with default headers values
func NewDeleteConfigTooManyRequests() *DeleteConfigTooManyRequests {

	return &DeleteConfigTooManyRequests{}
}

// WithPayload adds the payload to the delete config too many requests response
func (o *DeleteConfigTooManyRequests) WithPayload(payload *rest_model.APIErrorEnvelope) *DeleteConfigTooManyRequests {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete config too many requests response
func (o *DeleteConfigTooManyRequests) SetPayload(payload *rest_model.APIErrorEnvelope) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteConfigTooManyRequests) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(429)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteConfigServiceUnavailableCode is the HTTP code returned for type DeleteConfigServiceUnavailable
const DeleteConfigServiceUnavailableCode int = 503

/*DeleteConfigServiceUnavailable The request could not be completed due to the server being busy or in a temporarily bad state

swagger:response deleteConfigServiceUnavailable
*/
type DeleteConfigServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *rest_model.APIErrorEnvelope `json:"body,omitempty"`
}

// NewDeleteConfigServiceUnavailable creates DeleteConfigServiceUnavailable with default headers values
func NewDeleteConfigServiceUnavailable() *DeleteConfigServiceUnavailable {

	return &DeleteConfigServiceUnavailable{}
}

// WithPayload adds the payload to the delete config service unavailable response
func (o *DeleteConfigServiceUnavailable) WithPayload(payload *rest_model.APIErrorEnvelope) *DeleteConfigServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete config service unavailable response
func (o *DeleteConfigServiceUnavailable) SetPayload(payload *rest_model.APIErrorEnvelope) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteConfigServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
