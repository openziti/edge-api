// Code generated by go-swagger; DO NOT EDIT.

//
// Copyright NetFoundry Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// __          __              _
// \ \        / /             (_)
//  \ \  /\  / /_ _ _ __ _ __  _ _ __   __ _
//   \ \/  \/ / _` | '__| '_ \| | '_ \ / _` |
//    \  /\  / (_| | |  | | | | | | | | (_| | : This file is generated, do not edit it.
//     \/  \/ \__,_|_|  |_| |_|_|_| |_|\__, |
//                                      __/ |
//                                     |___/

package service_edge_router_policy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/openziti/edge-api/rest_model"
)

// CreateServiceEdgeRouterPolicyCreatedCode is the HTTP code returned for type CreateServiceEdgeRouterPolicyCreated
const CreateServiceEdgeRouterPolicyCreatedCode int = 201

/*CreateServiceEdgeRouterPolicyCreated The create request was successful and the resource has been added at the following location

swagger:response createServiceEdgeRouterPolicyCreated
*/
type CreateServiceEdgeRouterPolicyCreated struct {

	/*
	  In: Body
	*/
	Payload *rest_model.CreateEnvelope `json:"body,omitempty"`
}

// NewCreateServiceEdgeRouterPolicyCreated creates CreateServiceEdgeRouterPolicyCreated with default headers values
func NewCreateServiceEdgeRouterPolicyCreated() *CreateServiceEdgeRouterPolicyCreated {

	return &CreateServiceEdgeRouterPolicyCreated{}
}

// WithPayload adds the payload to the create service edge router policy created response
func (o *CreateServiceEdgeRouterPolicyCreated) WithPayload(payload *rest_model.CreateEnvelope) *CreateServiceEdgeRouterPolicyCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create service edge router policy created response
func (o *CreateServiceEdgeRouterPolicyCreated) SetPayload(payload *rest_model.CreateEnvelope) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateServiceEdgeRouterPolicyCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateServiceEdgeRouterPolicyBadRequestCode is the HTTP code returned for type CreateServiceEdgeRouterPolicyBadRequest
const CreateServiceEdgeRouterPolicyBadRequestCode int = 400

/*CreateServiceEdgeRouterPolicyBadRequest The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error's code, message, and cause fields can be inspected for further information

swagger:response createServiceEdgeRouterPolicyBadRequest
*/
type CreateServiceEdgeRouterPolicyBadRequest struct {

	/*
	  In: Body
	*/
	Payload *rest_model.APIErrorEnvelope `json:"body,omitempty"`
}

// NewCreateServiceEdgeRouterPolicyBadRequest creates CreateServiceEdgeRouterPolicyBadRequest with default headers values
func NewCreateServiceEdgeRouterPolicyBadRequest() *CreateServiceEdgeRouterPolicyBadRequest {

	return &CreateServiceEdgeRouterPolicyBadRequest{}
}

// WithPayload adds the payload to the create service edge router policy bad request response
func (o *CreateServiceEdgeRouterPolicyBadRequest) WithPayload(payload *rest_model.APIErrorEnvelope) *CreateServiceEdgeRouterPolicyBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create service edge router policy bad request response
func (o *CreateServiceEdgeRouterPolicyBadRequest) SetPayload(payload *rest_model.APIErrorEnvelope) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateServiceEdgeRouterPolicyBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateServiceEdgeRouterPolicyUnauthorizedCode is the HTTP code returned for type CreateServiceEdgeRouterPolicyUnauthorized
const CreateServiceEdgeRouterPolicyUnauthorizedCode int = 401

/*CreateServiceEdgeRouterPolicyUnauthorized The supplied session does not have the correct access rights to request this resource

swagger:response createServiceEdgeRouterPolicyUnauthorized
*/
type CreateServiceEdgeRouterPolicyUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *rest_model.APIErrorEnvelope `json:"body,omitempty"`
}

// NewCreateServiceEdgeRouterPolicyUnauthorized creates CreateServiceEdgeRouterPolicyUnauthorized with default headers values
func NewCreateServiceEdgeRouterPolicyUnauthorized() *CreateServiceEdgeRouterPolicyUnauthorized {

	return &CreateServiceEdgeRouterPolicyUnauthorized{}
}

// WithPayload adds the payload to the create service edge router policy unauthorized response
func (o *CreateServiceEdgeRouterPolicyUnauthorized) WithPayload(payload *rest_model.APIErrorEnvelope) *CreateServiceEdgeRouterPolicyUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create service edge router policy unauthorized response
func (o *CreateServiceEdgeRouterPolicyUnauthorized) SetPayload(payload *rest_model.APIErrorEnvelope) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateServiceEdgeRouterPolicyUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateServiceEdgeRouterPolicyTooManyRequestsCode is the HTTP code returned for type CreateServiceEdgeRouterPolicyTooManyRequests
const CreateServiceEdgeRouterPolicyTooManyRequestsCode int = 429

/*CreateServiceEdgeRouterPolicyTooManyRequests The resource requested is rate limited and the rate limit has been exceeded

swagger:response createServiceEdgeRouterPolicyTooManyRequests
*/
type CreateServiceEdgeRouterPolicyTooManyRequests struct {

	/*
	  In: Body
	*/
	Payload *rest_model.APIErrorEnvelope `json:"body,omitempty"`
}

// NewCreateServiceEdgeRouterPolicyTooManyRequests creates CreateServiceEdgeRouterPolicyTooManyRequests with default headers values
func NewCreateServiceEdgeRouterPolicyTooManyRequests() *CreateServiceEdgeRouterPolicyTooManyRequests {

	return &CreateServiceEdgeRouterPolicyTooManyRequests{}
}

// WithPayload adds the payload to the create service edge router policy too many requests response
func (o *CreateServiceEdgeRouterPolicyTooManyRequests) WithPayload(payload *rest_model.APIErrorEnvelope) *CreateServiceEdgeRouterPolicyTooManyRequests {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create service edge router policy too many requests response
func (o *CreateServiceEdgeRouterPolicyTooManyRequests) SetPayload(payload *rest_model.APIErrorEnvelope) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateServiceEdgeRouterPolicyTooManyRequests) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(429)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateServiceEdgeRouterPolicyServiceUnavailableCode is the HTTP code returned for type CreateServiceEdgeRouterPolicyServiceUnavailable
const CreateServiceEdgeRouterPolicyServiceUnavailableCode int = 503

/*CreateServiceEdgeRouterPolicyServiceUnavailable The request could not be completed due to the server being busy or in a temporarily bad state

swagger:response createServiceEdgeRouterPolicyServiceUnavailable
*/
type CreateServiceEdgeRouterPolicyServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *rest_model.APIErrorEnvelope `json:"body,omitempty"`
}

// NewCreateServiceEdgeRouterPolicyServiceUnavailable creates CreateServiceEdgeRouterPolicyServiceUnavailable with default headers values
func NewCreateServiceEdgeRouterPolicyServiceUnavailable() *CreateServiceEdgeRouterPolicyServiceUnavailable {

	return &CreateServiceEdgeRouterPolicyServiceUnavailable{}
}

// WithPayload adds the payload to the create service edge router policy service unavailable response
func (o *CreateServiceEdgeRouterPolicyServiceUnavailable) WithPayload(payload *rest_model.APIErrorEnvelope) *CreateServiceEdgeRouterPolicyServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create service edge router policy service unavailable response
func (o *CreateServiceEdgeRouterPolicyServiceUnavailable) SetPayload(payload *rest_model.APIErrorEnvelope) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateServiceEdgeRouterPolicyServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
