// Code generated by go-swagger; DO NOT EDIT.

//
// Copyright NetFoundry Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// __          __              _
// \ \        / /             (_)
//  \ \  /\  / /_ _ _ __ _ __  _ _ __   __ _
//   \ \/  \/ / _` | '__| '_ \| | '_ \ / _` |
//    \  /\  / (_| | |  | | | | | | | | (_| | : This file is generated, do not edit it.
//     \/  \/ \__,_|_|  |_| |_|_|_| |_|\__, |
//                                      __/ |
//                                     |___/

package authenticator

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/openziti/edge-api/rest_model"
)

// RequestExtendAllCertAuthenticatorsOKCode is the HTTP code returned for type RequestExtendAllCertAuthenticatorsOK
const RequestExtendAllCertAuthenticatorsOKCode int = 200

/*RequestExtendAllCertAuthenticatorsOK Base empty response

swagger:response requestExtendAllCertAuthenticatorsOK
*/
type RequestExtendAllCertAuthenticatorsOK struct {

	/*
	  In: Body
	*/
	Payload *rest_model.Empty `json:"body,omitempty"`
}

// NewRequestExtendAllCertAuthenticatorsOK creates RequestExtendAllCertAuthenticatorsOK with default headers values
func NewRequestExtendAllCertAuthenticatorsOK() *RequestExtendAllCertAuthenticatorsOK {

	return &RequestExtendAllCertAuthenticatorsOK{}
}

// WithPayload adds the payload to the request extend all cert authenticators o k response
func (o *RequestExtendAllCertAuthenticatorsOK) WithPayload(payload *rest_model.Empty) *RequestExtendAllCertAuthenticatorsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the request extend all cert authenticators o k response
func (o *RequestExtendAllCertAuthenticatorsOK) SetPayload(payload *rest_model.Empty) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RequestExtendAllCertAuthenticatorsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RequestExtendAllCertAuthenticatorsUnauthorizedCode is the HTTP code returned for type RequestExtendAllCertAuthenticatorsUnauthorized
const RequestExtendAllCertAuthenticatorsUnauthorizedCode int = 401

/*RequestExtendAllCertAuthenticatorsUnauthorized The supplied session does not have the correct access rights to request this resource

swagger:response requestExtendAllCertAuthenticatorsUnauthorized
*/
type RequestExtendAllCertAuthenticatorsUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *rest_model.APIErrorEnvelope `json:"body,omitempty"`
}

// NewRequestExtendAllCertAuthenticatorsUnauthorized creates RequestExtendAllCertAuthenticatorsUnauthorized with default headers values
func NewRequestExtendAllCertAuthenticatorsUnauthorized() *RequestExtendAllCertAuthenticatorsUnauthorized {

	return &RequestExtendAllCertAuthenticatorsUnauthorized{}
}

// WithPayload adds the payload to the request extend all cert authenticators unauthorized response
func (o *RequestExtendAllCertAuthenticatorsUnauthorized) WithPayload(payload *rest_model.APIErrorEnvelope) *RequestExtendAllCertAuthenticatorsUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the request extend all cert authenticators unauthorized response
func (o *RequestExtendAllCertAuthenticatorsUnauthorized) SetPayload(payload *rest_model.APIErrorEnvelope) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RequestExtendAllCertAuthenticatorsUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RequestExtendAllCertAuthenticatorsForbiddenCode is the HTTP code returned for type RequestExtendAllCertAuthenticatorsForbidden
const RequestExtendAllCertAuthenticatorsForbiddenCode int = 403

/*RequestExtendAllCertAuthenticatorsForbidden The request could not be completed and will never complete due to unchangeable state or conflicts.

swagger:response requestExtendAllCertAuthenticatorsForbidden
*/
type RequestExtendAllCertAuthenticatorsForbidden struct {

	/*
	  In: Body
	*/
	Payload *rest_model.APIErrorEnvelope `json:"body,omitempty"`
}

// NewRequestExtendAllCertAuthenticatorsForbidden creates RequestExtendAllCertAuthenticatorsForbidden with default headers values
func NewRequestExtendAllCertAuthenticatorsForbidden() *RequestExtendAllCertAuthenticatorsForbidden {

	return &RequestExtendAllCertAuthenticatorsForbidden{}
}

// WithPayload adds the payload to the request extend all cert authenticators forbidden response
func (o *RequestExtendAllCertAuthenticatorsForbidden) WithPayload(payload *rest_model.APIErrorEnvelope) *RequestExtendAllCertAuthenticatorsForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the request extend all cert authenticators forbidden response
func (o *RequestExtendAllCertAuthenticatorsForbidden) SetPayload(payload *rest_model.APIErrorEnvelope) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RequestExtendAllCertAuthenticatorsForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RequestExtendAllCertAuthenticatorsNotFoundCode is the HTTP code returned for type RequestExtendAllCertAuthenticatorsNotFound
const RequestExtendAllCertAuthenticatorsNotFoundCode int = 404

/*RequestExtendAllCertAuthenticatorsNotFound The requested resource does not exist

swagger:response requestExtendAllCertAuthenticatorsNotFound
*/
type RequestExtendAllCertAuthenticatorsNotFound struct {

	/*
	  In: Body
	*/
	Payload *rest_model.APIErrorEnvelope `json:"body,omitempty"`
}

// NewRequestExtendAllCertAuthenticatorsNotFound creates RequestExtendAllCertAuthenticatorsNotFound with default headers values
func NewRequestExtendAllCertAuthenticatorsNotFound() *RequestExtendAllCertAuthenticatorsNotFound {

	return &RequestExtendAllCertAuthenticatorsNotFound{}
}

// WithPayload adds the payload to the request extend all cert authenticators not found response
func (o *RequestExtendAllCertAuthenticatorsNotFound) WithPayload(payload *rest_model.APIErrorEnvelope) *RequestExtendAllCertAuthenticatorsNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the request extend all cert authenticators not found response
func (o *RequestExtendAllCertAuthenticatorsNotFound) SetPayload(payload *rest_model.APIErrorEnvelope) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RequestExtendAllCertAuthenticatorsNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RequestExtendAllCertAuthenticatorsTooManyRequestsCode is the HTTP code returned for type RequestExtendAllCertAuthenticatorsTooManyRequests
const RequestExtendAllCertAuthenticatorsTooManyRequestsCode int = 429

/*RequestExtendAllCertAuthenticatorsTooManyRequests The resource requested is rate limited and the rate limit has been exceeded

swagger:response requestExtendAllCertAuthenticatorsTooManyRequests
*/
type RequestExtendAllCertAuthenticatorsTooManyRequests struct {

	/*
	  In: Body
	*/
	Payload *rest_model.APIErrorEnvelope `json:"body,omitempty"`
}

// NewRequestExtendAllCertAuthenticatorsTooManyRequests creates RequestExtendAllCertAuthenticatorsTooManyRequests with default headers values
func NewRequestExtendAllCertAuthenticatorsTooManyRequests() *RequestExtendAllCertAuthenticatorsTooManyRequests {

	return &RequestExtendAllCertAuthenticatorsTooManyRequests{}
}

// WithPayload adds the payload to the request extend all cert authenticators too many requests response
func (o *RequestExtendAllCertAuthenticatorsTooManyRequests) WithPayload(payload *rest_model.APIErrorEnvelope) *RequestExtendAllCertAuthenticatorsTooManyRequests {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the request extend all cert authenticators too many requests response
func (o *RequestExtendAllCertAuthenticatorsTooManyRequests) SetPayload(payload *rest_model.APIErrorEnvelope) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RequestExtendAllCertAuthenticatorsTooManyRequests) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(429)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RequestExtendAllCertAuthenticatorsServiceUnavailableCode is the HTTP code returned for type RequestExtendAllCertAuthenticatorsServiceUnavailable
const RequestExtendAllCertAuthenticatorsServiceUnavailableCode int = 503

/*RequestExtendAllCertAuthenticatorsServiceUnavailable The request could not be completed due to the server being busy or in a temporarily bad state

swagger:response requestExtendAllCertAuthenticatorsServiceUnavailable
*/
type RequestExtendAllCertAuthenticatorsServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *rest_model.APIErrorEnvelope `json:"body,omitempty"`
}

// NewRequestExtendAllCertAuthenticatorsServiceUnavailable creates RequestExtendAllCertAuthenticatorsServiceUnavailable with default headers values
func NewRequestExtendAllCertAuthenticatorsServiceUnavailable() *RequestExtendAllCertAuthenticatorsServiceUnavailable {

	return &RequestExtendAllCertAuthenticatorsServiceUnavailable{}
}

// WithPayload adds the payload to the request extend all cert authenticators service unavailable response
func (o *RequestExtendAllCertAuthenticatorsServiceUnavailable) WithPayload(payload *rest_model.APIErrorEnvelope) *RequestExtendAllCertAuthenticatorsServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the request extend all cert authenticators service unavailable response
func (o *RequestExtendAllCertAuthenticatorsServiceUnavailable) SetPayload(payload *rest_model.APIErrorEnvelope) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RequestExtendAllCertAuthenticatorsServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
