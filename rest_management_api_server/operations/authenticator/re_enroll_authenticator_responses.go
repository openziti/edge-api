// Code generated by go-swagger; DO NOT EDIT.

//
// Copyright NetFoundry Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// __          __              _
// \ \        / /             (_)
//  \ \  /\  / /_ _ _ __ _ __  _ _ __   __ _
//   \ \/  \/ / _` | '__| '_ \| | '_ \ / _` |
//    \  /\  / (_| | |  | | | | | | | | (_| | : This file is generated, do not edit it.
//     \/  \/ \__,_|_|  |_| |_|_|_| |_|\__, |
//                                      __/ |
//                                     |___/

package authenticator

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/openziti/edge-api/rest_model"
)

// ReEnrollAuthenticatorCreatedCode is the HTTP code returned for type ReEnrollAuthenticatorCreated
const ReEnrollAuthenticatorCreatedCode int = 201

/*ReEnrollAuthenticatorCreated The create request was successful and the resource has been added at the following location

swagger:response reEnrollAuthenticatorCreated
*/
type ReEnrollAuthenticatorCreated struct {

	/*
	  In: Body
	*/
	Payload *rest_model.CreateEnvelope `json:"body,omitempty"`
}

// NewReEnrollAuthenticatorCreated creates ReEnrollAuthenticatorCreated with default headers values
func NewReEnrollAuthenticatorCreated() *ReEnrollAuthenticatorCreated {

	return &ReEnrollAuthenticatorCreated{}
}

// WithPayload adds the payload to the re enroll authenticator created response
func (o *ReEnrollAuthenticatorCreated) WithPayload(payload *rest_model.CreateEnvelope) *ReEnrollAuthenticatorCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the re enroll authenticator created response
func (o *ReEnrollAuthenticatorCreated) SetPayload(payload *rest_model.CreateEnvelope) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ReEnrollAuthenticatorCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ReEnrollAuthenticatorUnauthorizedCode is the HTTP code returned for type ReEnrollAuthenticatorUnauthorized
const ReEnrollAuthenticatorUnauthorizedCode int = 401

/*ReEnrollAuthenticatorUnauthorized The supplied session does not have the correct access rights to request this resource

swagger:response reEnrollAuthenticatorUnauthorized
*/
type ReEnrollAuthenticatorUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *rest_model.APIErrorEnvelope `json:"body,omitempty"`
}

// NewReEnrollAuthenticatorUnauthorized creates ReEnrollAuthenticatorUnauthorized with default headers values
func NewReEnrollAuthenticatorUnauthorized() *ReEnrollAuthenticatorUnauthorized {

	return &ReEnrollAuthenticatorUnauthorized{}
}

// WithPayload adds the payload to the re enroll authenticator unauthorized response
func (o *ReEnrollAuthenticatorUnauthorized) WithPayload(payload *rest_model.APIErrorEnvelope) *ReEnrollAuthenticatorUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the re enroll authenticator unauthorized response
func (o *ReEnrollAuthenticatorUnauthorized) SetPayload(payload *rest_model.APIErrorEnvelope) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ReEnrollAuthenticatorUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ReEnrollAuthenticatorNotFoundCode is the HTTP code returned for type ReEnrollAuthenticatorNotFound
const ReEnrollAuthenticatorNotFoundCode int = 404

/*ReEnrollAuthenticatorNotFound The requested resource does not exist

swagger:response reEnrollAuthenticatorNotFound
*/
type ReEnrollAuthenticatorNotFound struct {

	/*
	  In: Body
	*/
	Payload *rest_model.APIErrorEnvelope `json:"body,omitempty"`
}

// NewReEnrollAuthenticatorNotFound creates ReEnrollAuthenticatorNotFound with default headers values
func NewReEnrollAuthenticatorNotFound() *ReEnrollAuthenticatorNotFound {

	return &ReEnrollAuthenticatorNotFound{}
}

// WithPayload adds the payload to the re enroll authenticator not found response
func (o *ReEnrollAuthenticatorNotFound) WithPayload(payload *rest_model.APIErrorEnvelope) *ReEnrollAuthenticatorNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the re enroll authenticator not found response
func (o *ReEnrollAuthenticatorNotFound) SetPayload(payload *rest_model.APIErrorEnvelope) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ReEnrollAuthenticatorNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ReEnrollAuthenticatorTooManyRequestsCode is the HTTP code returned for type ReEnrollAuthenticatorTooManyRequests
const ReEnrollAuthenticatorTooManyRequestsCode int = 429

/*ReEnrollAuthenticatorTooManyRequests The resource requested is rate limited and the rate limit has been exceeded

swagger:response reEnrollAuthenticatorTooManyRequests
*/
type ReEnrollAuthenticatorTooManyRequests struct {

	/*
	  In: Body
	*/
	Payload *rest_model.APIErrorEnvelope `json:"body,omitempty"`
}

// NewReEnrollAuthenticatorTooManyRequests creates ReEnrollAuthenticatorTooManyRequests with default headers values
func NewReEnrollAuthenticatorTooManyRequests() *ReEnrollAuthenticatorTooManyRequests {

	return &ReEnrollAuthenticatorTooManyRequests{}
}

// WithPayload adds the payload to the re enroll authenticator too many requests response
func (o *ReEnrollAuthenticatorTooManyRequests) WithPayload(payload *rest_model.APIErrorEnvelope) *ReEnrollAuthenticatorTooManyRequests {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the re enroll authenticator too many requests response
func (o *ReEnrollAuthenticatorTooManyRequests) SetPayload(payload *rest_model.APIErrorEnvelope) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ReEnrollAuthenticatorTooManyRequests) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(429)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ReEnrollAuthenticatorServiceUnavailableCode is the HTTP code returned for type ReEnrollAuthenticatorServiceUnavailable
const ReEnrollAuthenticatorServiceUnavailableCode int = 503

/*ReEnrollAuthenticatorServiceUnavailable The request could not be completed due to the server being busy or in a temporarily bad state

swagger:response reEnrollAuthenticatorServiceUnavailable
*/
type ReEnrollAuthenticatorServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *rest_model.APIErrorEnvelope `json:"body,omitempty"`
}

// NewReEnrollAuthenticatorServiceUnavailable creates ReEnrollAuthenticatorServiceUnavailable with default headers values
func NewReEnrollAuthenticatorServiceUnavailable() *ReEnrollAuthenticatorServiceUnavailable {

	return &ReEnrollAuthenticatorServiceUnavailable{}
}

// WithPayload adds the payload to the re enroll authenticator service unavailable response
func (o *ReEnrollAuthenticatorServiceUnavailable) WithPayload(payload *rest_model.APIErrorEnvelope) *ReEnrollAuthenticatorServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the re enroll authenticator service unavailable response
func (o *ReEnrollAuthenticatorServiceUnavailable) SetPayload(payload *rest_model.APIErrorEnvelope) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ReEnrollAuthenticatorServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
