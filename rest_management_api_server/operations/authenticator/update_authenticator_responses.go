// Code generated by go-swagger; DO NOT EDIT.

//
// Copyright NetFoundry Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// __          __              _
// \ \        / /             (_)
//  \ \  /\  / /_ _ _ __ _ __  _ _ __   __ _
//   \ \/  \/ / _` | '__| '_ \| | '_ \ / _` |
//    \  /\  / (_| | |  | | | | | | | | (_| | : This file is generated, do not edit it.
//     \/  \/ \__,_|_|  |_| |_|_|_| |_|\__, |
//                                      __/ |
//                                     |___/

package authenticator

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/openziti/edge-api/rest_model"
)

// UpdateAuthenticatorOKCode is the HTTP code returned for type UpdateAuthenticatorOK
const UpdateAuthenticatorOKCode int = 200

/*UpdateAuthenticatorOK The update request was successful and the resource has been altered

swagger:response updateAuthenticatorOK
*/
type UpdateAuthenticatorOK struct {

	/*
	  In: Body
	*/
	Payload *rest_model.Empty `json:"body,omitempty"`
}

// NewUpdateAuthenticatorOK creates UpdateAuthenticatorOK with default headers values
func NewUpdateAuthenticatorOK() *UpdateAuthenticatorOK {

	return &UpdateAuthenticatorOK{}
}

// WithPayload adds the payload to the update authenticator o k response
func (o *UpdateAuthenticatorOK) WithPayload(payload *rest_model.Empty) *UpdateAuthenticatorOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update authenticator o k response
func (o *UpdateAuthenticatorOK) SetPayload(payload *rest_model.Empty) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateAuthenticatorOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateAuthenticatorBadRequestCode is the HTTP code returned for type UpdateAuthenticatorBadRequest
const UpdateAuthenticatorBadRequestCode int = 400

/*UpdateAuthenticatorBadRequest The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error's code, message, and cause fields can be inspected for further information

swagger:response updateAuthenticatorBadRequest
*/
type UpdateAuthenticatorBadRequest struct {

	/*
	  In: Body
	*/
	Payload *rest_model.APIErrorEnvelope `json:"body,omitempty"`
}

// NewUpdateAuthenticatorBadRequest creates UpdateAuthenticatorBadRequest with default headers values
func NewUpdateAuthenticatorBadRequest() *UpdateAuthenticatorBadRequest {

	return &UpdateAuthenticatorBadRequest{}
}

// WithPayload adds the payload to the update authenticator bad request response
func (o *UpdateAuthenticatorBadRequest) WithPayload(payload *rest_model.APIErrorEnvelope) *UpdateAuthenticatorBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update authenticator bad request response
func (o *UpdateAuthenticatorBadRequest) SetPayload(payload *rest_model.APIErrorEnvelope) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateAuthenticatorBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateAuthenticatorUnauthorizedCode is the HTTP code returned for type UpdateAuthenticatorUnauthorized
const UpdateAuthenticatorUnauthorizedCode int = 401

/*UpdateAuthenticatorUnauthorized The supplied session does not have the correct access rights to request this resource

swagger:response updateAuthenticatorUnauthorized
*/
type UpdateAuthenticatorUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *rest_model.APIErrorEnvelope `json:"body,omitempty"`
}

// NewUpdateAuthenticatorUnauthorized creates UpdateAuthenticatorUnauthorized with default headers values
func NewUpdateAuthenticatorUnauthorized() *UpdateAuthenticatorUnauthorized {

	return &UpdateAuthenticatorUnauthorized{}
}

// WithPayload adds the payload to the update authenticator unauthorized response
func (o *UpdateAuthenticatorUnauthorized) WithPayload(payload *rest_model.APIErrorEnvelope) *UpdateAuthenticatorUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update authenticator unauthorized response
func (o *UpdateAuthenticatorUnauthorized) SetPayload(payload *rest_model.APIErrorEnvelope) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateAuthenticatorUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateAuthenticatorNotFoundCode is the HTTP code returned for type UpdateAuthenticatorNotFound
const UpdateAuthenticatorNotFoundCode int = 404

/*UpdateAuthenticatorNotFound The requested resource does not exist

swagger:response updateAuthenticatorNotFound
*/
type UpdateAuthenticatorNotFound struct {

	/*
	  In: Body
	*/
	Payload *rest_model.APIErrorEnvelope `json:"body,omitempty"`
}

// NewUpdateAuthenticatorNotFound creates UpdateAuthenticatorNotFound with default headers values
func NewUpdateAuthenticatorNotFound() *UpdateAuthenticatorNotFound {

	return &UpdateAuthenticatorNotFound{}
}

// WithPayload adds the payload to the update authenticator not found response
func (o *UpdateAuthenticatorNotFound) WithPayload(payload *rest_model.APIErrorEnvelope) *UpdateAuthenticatorNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update authenticator not found response
func (o *UpdateAuthenticatorNotFound) SetPayload(payload *rest_model.APIErrorEnvelope) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateAuthenticatorNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateAuthenticatorTooManyRequestsCode is the HTTP code returned for type UpdateAuthenticatorTooManyRequests
const UpdateAuthenticatorTooManyRequestsCode int = 429

/*UpdateAuthenticatorTooManyRequests The resource requested is rate limited and the rate limit has been exceeded

swagger:response updateAuthenticatorTooManyRequests
*/
type UpdateAuthenticatorTooManyRequests struct {

	/*
	  In: Body
	*/
	Payload *rest_model.APIErrorEnvelope `json:"body,omitempty"`
}

// NewUpdateAuthenticatorTooManyRequests creates UpdateAuthenticatorTooManyRequests with default headers values
func NewUpdateAuthenticatorTooManyRequests() *UpdateAuthenticatorTooManyRequests {

	return &UpdateAuthenticatorTooManyRequests{}
}

// WithPayload adds the payload to the update authenticator too many requests response
func (o *UpdateAuthenticatorTooManyRequests) WithPayload(payload *rest_model.APIErrorEnvelope) *UpdateAuthenticatorTooManyRequests {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update authenticator too many requests response
func (o *UpdateAuthenticatorTooManyRequests) SetPayload(payload *rest_model.APIErrorEnvelope) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateAuthenticatorTooManyRequests) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(429)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateAuthenticatorServiceUnavailableCode is the HTTP code returned for type UpdateAuthenticatorServiceUnavailable
const UpdateAuthenticatorServiceUnavailableCode int = 503

/*UpdateAuthenticatorServiceUnavailable The request could not be completed due to the server being busy or in a temporarily bad state

swagger:response updateAuthenticatorServiceUnavailable
*/
type UpdateAuthenticatorServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *rest_model.APIErrorEnvelope `json:"body,omitempty"`
}

// NewUpdateAuthenticatorServiceUnavailable creates UpdateAuthenticatorServiceUnavailable with default headers values
func NewUpdateAuthenticatorServiceUnavailable() *UpdateAuthenticatorServiceUnavailable {

	return &UpdateAuthenticatorServiceUnavailable{}
}

// WithPayload adds the payload to the update authenticator service unavailable response
func (o *UpdateAuthenticatorServiceUnavailable) WithPayload(payload *rest_model.APIErrorEnvelope) *UpdateAuthenticatorServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update authenticator service unavailable response
func (o *UpdateAuthenticatorServiceUnavailable) SetPayload(payload *rest_model.APIErrorEnvelope) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateAuthenticatorServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
