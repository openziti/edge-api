// Code generated by go-swagger; DO NOT EDIT.

//
// Copyright NetFoundry Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// __          __              _
// \ \        / /             (_)
//  \ \  /\  / /_ _ _ __ _ __  _ _ __   __ _
//   \ \/  \/ / _` | '__| '_ \| | '_ \ / _` |
//    \  /\  / (_| | |  | | | | | | | | (_| | : This file is generated, do not edit it.
//     \/  \/ \__,_|_|  |_| |_|_|_| |_|\__, |
//                                      __/ |
//                                     |___/

package service_policy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/openziti/edge-api/rest_model"
)

// ListServicePolicyServicesOKCode is the HTTP code returned for type ListServicePolicyServicesOK
const ListServicePolicyServicesOKCode int = 200

/*ListServicePolicyServicesOK A list of services

swagger:response listServicePolicyServicesOK
*/
type ListServicePolicyServicesOK struct {

	/*
	  In: Body
	*/
	Payload *rest_model.ListServicesEnvelope `json:"body,omitempty"`
}

// NewListServicePolicyServicesOK creates ListServicePolicyServicesOK with default headers values
func NewListServicePolicyServicesOK() *ListServicePolicyServicesOK {

	return &ListServicePolicyServicesOK{}
}

// WithPayload adds the payload to the list service policy services o k response
func (o *ListServicePolicyServicesOK) WithPayload(payload *rest_model.ListServicesEnvelope) *ListServicePolicyServicesOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list service policy services o k response
func (o *ListServicePolicyServicesOK) SetPayload(payload *rest_model.ListServicesEnvelope) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListServicePolicyServicesOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ListServicePolicyServicesBadRequestCode is the HTTP code returned for type ListServicePolicyServicesBadRequest
const ListServicePolicyServicesBadRequestCode int = 400

/*ListServicePolicyServicesBadRequest The requested resource does not exist

swagger:response listServicePolicyServicesBadRequest
*/
type ListServicePolicyServicesBadRequest struct {

	/*
	  In: Body
	*/
	Payload *rest_model.APIErrorEnvelope `json:"body,omitempty"`
}

// NewListServicePolicyServicesBadRequest creates ListServicePolicyServicesBadRequest with default headers values
func NewListServicePolicyServicesBadRequest() *ListServicePolicyServicesBadRequest {

	return &ListServicePolicyServicesBadRequest{}
}

// WithPayload adds the payload to the list service policy services bad request response
func (o *ListServicePolicyServicesBadRequest) WithPayload(payload *rest_model.APIErrorEnvelope) *ListServicePolicyServicesBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list service policy services bad request response
func (o *ListServicePolicyServicesBadRequest) SetPayload(payload *rest_model.APIErrorEnvelope) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListServicePolicyServicesBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ListServicePolicyServicesUnauthorizedCode is the HTTP code returned for type ListServicePolicyServicesUnauthorized
const ListServicePolicyServicesUnauthorizedCode int = 401

/*ListServicePolicyServicesUnauthorized The supplied session does not have the correct access rights to request this resource

swagger:response listServicePolicyServicesUnauthorized
*/
type ListServicePolicyServicesUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *rest_model.APIErrorEnvelope `json:"body,omitempty"`
}

// NewListServicePolicyServicesUnauthorized creates ListServicePolicyServicesUnauthorized with default headers values
func NewListServicePolicyServicesUnauthorized() *ListServicePolicyServicesUnauthorized {

	return &ListServicePolicyServicesUnauthorized{}
}

// WithPayload adds the payload to the list service policy services unauthorized response
func (o *ListServicePolicyServicesUnauthorized) WithPayload(payload *rest_model.APIErrorEnvelope) *ListServicePolicyServicesUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list service policy services unauthorized response
func (o *ListServicePolicyServicesUnauthorized) SetPayload(payload *rest_model.APIErrorEnvelope) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListServicePolicyServicesUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ListServicePolicyServicesTooManyRequestsCode is the HTTP code returned for type ListServicePolicyServicesTooManyRequests
const ListServicePolicyServicesTooManyRequestsCode int = 429

/*ListServicePolicyServicesTooManyRequests The resource requested is rate limited and the rate limit has been exceeded

swagger:response listServicePolicyServicesTooManyRequests
*/
type ListServicePolicyServicesTooManyRequests struct {

	/*
	  In: Body
	*/
	Payload *rest_model.APIErrorEnvelope `json:"body,omitempty"`
}

// NewListServicePolicyServicesTooManyRequests creates ListServicePolicyServicesTooManyRequests with default headers values
func NewListServicePolicyServicesTooManyRequests() *ListServicePolicyServicesTooManyRequests {

	return &ListServicePolicyServicesTooManyRequests{}
}

// WithPayload adds the payload to the list service policy services too many requests response
func (o *ListServicePolicyServicesTooManyRequests) WithPayload(payload *rest_model.APIErrorEnvelope) *ListServicePolicyServicesTooManyRequests {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list service policy services too many requests response
func (o *ListServicePolicyServicesTooManyRequests) SetPayload(payload *rest_model.APIErrorEnvelope) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListServicePolicyServicesTooManyRequests) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(429)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ListServicePolicyServicesServiceUnavailableCode is the HTTP code returned for type ListServicePolicyServicesServiceUnavailable
const ListServicePolicyServicesServiceUnavailableCode int = 503

/*ListServicePolicyServicesServiceUnavailable The request could not be completed due to the server being busy or in a temporarily bad state

swagger:response listServicePolicyServicesServiceUnavailable
*/
type ListServicePolicyServicesServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *rest_model.APIErrorEnvelope `json:"body,omitempty"`
}

// NewListServicePolicyServicesServiceUnavailable creates ListServicePolicyServicesServiceUnavailable with default headers values
func NewListServicePolicyServicesServiceUnavailable() *ListServicePolicyServicesServiceUnavailable {

	return &ListServicePolicyServicesServiceUnavailable{}
}

// WithPayload adds the payload to the list service policy services service unavailable response
func (o *ListServicePolicyServicesServiceUnavailable) WithPayload(payload *rest_model.APIErrorEnvelope) *ListServicePolicyServicesServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list service policy services service unavailable response
func (o *ListServicePolicyServicesServiceUnavailable) SetPayload(payload *rest_model.APIErrorEnvelope) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListServicePolicyServicesServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
