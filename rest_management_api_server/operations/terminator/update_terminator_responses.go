// Code generated by go-swagger; DO NOT EDIT.

//
// Copyright NetFoundry Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// __          __              _
// \ \        / /             (_)
//  \ \  /\  / /_ _ _ __ _ __  _ _ __   __ _
//   \ \/  \/ / _` | '__| '_ \| | '_ \ / _` |
//    \  /\  / (_| | |  | | | | | | | | (_| | : This file is generated, do not edit it.
//     \/  \/ \__,_|_|  |_| |_|_|_| |_|\__, |
//                                      __/ |
//                                     |___/

package terminator

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/openziti/edge-api/rest_model"
)

// UpdateTerminatorOKCode is the HTTP code returned for type UpdateTerminatorOK
const UpdateTerminatorOKCode int = 200

/*UpdateTerminatorOK The update request was successful and the resource has been altered

swagger:response updateTerminatorOK
*/
type UpdateTerminatorOK struct {

	/*
	  In: Body
	*/
	Payload *rest_model.Empty `json:"body,omitempty"`
}

// NewUpdateTerminatorOK creates UpdateTerminatorOK with default headers values
func NewUpdateTerminatorOK() *UpdateTerminatorOK {

	return &UpdateTerminatorOK{}
}

// WithPayload adds the payload to the update terminator o k response
func (o *UpdateTerminatorOK) WithPayload(payload *rest_model.Empty) *UpdateTerminatorOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update terminator o k response
func (o *UpdateTerminatorOK) SetPayload(payload *rest_model.Empty) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateTerminatorOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateTerminatorBadRequestCode is the HTTP code returned for type UpdateTerminatorBadRequest
const UpdateTerminatorBadRequestCode int = 400

/*UpdateTerminatorBadRequest The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error's code, message, and cause fields can be inspected for further information

swagger:response updateTerminatorBadRequest
*/
type UpdateTerminatorBadRequest struct {

	/*
	  In: Body
	*/
	Payload *rest_model.APIErrorEnvelope `json:"body,omitempty"`
}

// NewUpdateTerminatorBadRequest creates UpdateTerminatorBadRequest with default headers values
func NewUpdateTerminatorBadRequest() *UpdateTerminatorBadRequest {

	return &UpdateTerminatorBadRequest{}
}

// WithPayload adds the payload to the update terminator bad request response
func (o *UpdateTerminatorBadRequest) WithPayload(payload *rest_model.APIErrorEnvelope) *UpdateTerminatorBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update terminator bad request response
func (o *UpdateTerminatorBadRequest) SetPayload(payload *rest_model.APIErrorEnvelope) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateTerminatorBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateTerminatorUnauthorizedCode is the HTTP code returned for type UpdateTerminatorUnauthorized
const UpdateTerminatorUnauthorizedCode int = 401

/*UpdateTerminatorUnauthorized The supplied session does not have the correct access rights to request this resource

swagger:response updateTerminatorUnauthorized
*/
type UpdateTerminatorUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *rest_model.APIErrorEnvelope `json:"body,omitempty"`
}

// NewUpdateTerminatorUnauthorized creates UpdateTerminatorUnauthorized with default headers values
func NewUpdateTerminatorUnauthorized() *UpdateTerminatorUnauthorized {

	return &UpdateTerminatorUnauthorized{}
}

// WithPayload adds the payload to the update terminator unauthorized response
func (o *UpdateTerminatorUnauthorized) WithPayload(payload *rest_model.APIErrorEnvelope) *UpdateTerminatorUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update terminator unauthorized response
func (o *UpdateTerminatorUnauthorized) SetPayload(payload *rest_model.APIErrorEnvelope) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateTerminatorUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateTerminatorNotFoundCode is the HTTP code returned for type UpdateTerminatorNotFound
const UpdateTerminatorNotFoundCode int = 404

/*UpdateTerminatorNotFound The requested resource does not exist

swagger:response updateTerminatorNotFound
*/
type UpdateTerminatorNotFound struct {

	/*
	  In: Body
	*/
	Payload *rest_model.APIErrorEnvelope `json:"body,omitempty"`
}

// NewUpdateTerminatorNotFound creates UpdateTerminatorNotFound with default headers values
func NewUpdateTerminatorNotFound() *UpdateTerminatorNotFound {

	return &UpdateTerminatorNotFound{}
}

// WithPayload adds the payload to the update terminator not found response
func (o *UpdateTerminatorNotFound) WithPayload(payload *rest_model.APIErrorEnvelope) *UpdateTerminatorNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update terminator not found response
func (o *UpdateTerminatorNotFound) SetPayload(payload *rest_model.APIErrorEnvelope) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateTerminatorNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateTerminatorTooManyRequestsCode is the HTTP code returned for type UpdateTerminatorTooManyRequests
const UpdateTerminatorTooManyRequestsCode int = 429

/*UpdateTerminatorTooManyRequests The resource requested is rate limited and the rate limit has been exceeded

swagger:response updateTerminatorTooManyRequests
*/
type UpdateTerminatorTooManyRequests struct {

	/*
	  In: Body
	*/
	Payload *rest_model.APIErrorEnvelope `json:"body,omitempty"`
}

// NewUpdateTerminatorTooManyRequests creates UpdateTerminatorTooManyRequests with default headers values
func NewUpdateTerminatorTooManyRequests() *UpdateTerminatorTooManyRequests {

	return &UpdateTerminatorTooManyRequests{}
}

// WithPayload adds the payload to the update terminator too many requests response
func (o *UpdateTerminatorTooManyRequests) WithPayload(payload *rest_model.APIErrorEnvelope) *UpdateTerminatorTooManyRequests {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update terminator too many requests response
func (o *UpdateTerminatorTooManyRequests) SetPayload(payload *rest_model.APIErrorEnvelope) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateTerminatorTooManyRequests) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(429)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateTerminatorServiceUnavailableCode is the HTTP code returned for type UpdateTerminatorServiceUnavailable
const UpdateTerminatorServiceUnavailableCode int = 503

/*UpdateTerminatorServiceUnavailable The request could not be completed due to the server being busy or in a temporarily bad state

swagger:response updateTerminatorServiceUnavailable
*/
type UpdateTerminatorServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *rest_model.APIErrorEnvelope `json:"body,omitempty"`
}

// NewUpdateTerminatorServiceUnavailable creates UpdateTerminatorServiceUnavailable with default headers values
func NewUpdateTerminatorServiceUnavailable() *UpdateTerminatorServiceUnavailable {

	return &UpdateTerminatorServiceUnavailable{}
}

// WithPayload adds the payload to the update terminator service unavailable response
func (o *UpdateTerminatorServiceUnavailable) WithPayload(payload *rest_model.APIErrorEnvelope) *UpdateTerminatorServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update terminator service unavailable response
func (o *UpdateTerminatorServiceUnavailable) SetPayload(payload *rest_model.APIErrorEnvelope) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateTerminatorServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
