// Code generated by go-swagger; DO NOT EDIT.

//
// Copyright NetFoundry Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// __          __              _
// \ \        / /             (_)
//  \ \  /\  / /_ _ _ __ _ __  _ _ __   __ _
//   \ \/  \/ / _` | '__| '_ \| | '_ \ / _` |
//    \  /\  / (_| | |  | | | | | | | | (_| | : This file is generated, do not edit it.
//     \/  \/ \__,_|_|  |_| |_|_|_| |_|\__, |
//                                      __/ |
//                                     |___/

package edge_router_policy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/openziti/edge-api/rest_model"
)

// ListEdgeRouterPoliciesOKCode is the HTTP code returned for type ListEdgeRouterPoliciesOK
const ListEdgeRouterPoliciesOKCode int = 200

/*ListEdgeRouterPoliciesOK A list of edge router policies

swagger:response listEdgeRouterPoliciesOK
*/
type ListEdgeRouterPoliciesOK struct {

	/*
	  In: Body
	*/
	Payload *rest_model.ListEdgeRouterPoliciesEnvelope `json:"body,omitempty"`
}

// NewListEdgeRouterPoliciesOK creates ListEdgeRouterPoliciesOK with default headers values
func NewListEdgeRouterPoliciesOK() *ListEdgeRouterPoliciesOK {

	return &ListEdgeRouterPoliciesOK{}
}

// WithPayload adds the payload to the list edge router policies o k response
func (o *ListEdgeRouterPoliciesOK) WithPayload(payload *rest_model.ListEdgeRouterPoliciesEnvelope) *ListEdgeRouterPoliciesOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list edge router policies o k response
func (o *ListEdgeRouterPoliciesOK) SetPayload(payload *rest_model.ListEdgeRouterPoliciesEnvelope) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListEdgeRouterPoliciesOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ListEdgeRouterPoliciesBadRequestCode is the HTTP code returned for type ListEdgeRouterPoliciesBadRequest
const ListEdgeRouterPoliciesBadRequestCode int = 400

/*ListEdgeRouterPoliciesBadRequest The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error's code, message, and cause fields can be inspected for further information

swagger:response listEdgeRouterPoliciesBadRequest
*/
type ListEdgeRouterPoliciesBadRequest struct {

	/*
	  In: Body
	*/
	Payload *rest_model.APIErrorEnvelope `json:"body,omitempty"`
}

// NewListEdgeRouterPoliciesBadRequest creates ListEdgeRouterPoliciesBadRequest with default headers values
func NewListEdgeRouterPoliciesBadRequest() *ListEdgeRouterPoliciesBadRequest {

	return &ListEdgeRouterPoliciesBadRequest{}
}

// WithPayload adds the payload to the list edge router policies bad request response
func (o *ListEdgeRouterPoliciesBadRequest) WithPayload(payload *rest_model.APIErrorEnvelope) *ListEdgeRouterPoliciesBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list edge router policies bad request response
func (o *ListEdgeRouterPoliciesBadRequest) SetPayload(payload *rest_model.APIErrorEnvelope) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListEdgeRouterPoliciesBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ListEdgeRouterPoliciesUnauthorizedCode is the HTTP code returned for type ListEdgeRouterPoliciesUnauthorized
const ListEdgeRouterPoliciesUnauthorizedCode int = 401

/*ListEdgeRouterPoliciesUnauthorized The supplied session does not have the correct access rights to request this resource

swagger:response listEdgeRouterPoliciesUnauthorized
*/
type ListEdgeRouterPoliciesUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *rest_model.APIErrorEnvelope `json:"body,omitempty"`
}

// NewListEdgeRouterPoliciesUnauthorized creates ListEdgeRouterPoliciesUnauthorized with default headers values
func NewListEdgeRouterPoliciesUnauthorized() *ListEdgeRouterPoliciesUnauthorized {

	return &ListEdgeRouterPoliciesUnauthorized{}
}

// WithPayload adds the payload to the list edge router policies unauthorized response
func (o *ListEdgeRouterPoliciesUnauthorized) WithPayload(payload *rest_model.APIErrorEnvelope) *ListEdgeRouterPoliciesUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list edge router policies unauthorized response
func (o *ListEdgeRouterPoliciesUnauthorized) SetPayload(payload *rest_model.APIErrorEnvelope) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListEdgeRouterPoliciesUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ListEdgeRouterPoliciesTooManyRequestsCode is the HTTP code returned for type ListEdgeRouterPoliciesTooManyRequests
const ListEdgeRouterPoliciesTooManyRequestsCode int = 429

/*ListEdgeRouterPoliciesTooManyRequests The resource requested is rate limited and the rate limit has been exceeded

swagger:response listEdgeRouterPoliciesTooManyRequests
*/
type ListEdgeRouterPoliciesTooManyRequests struct {

	/*
	  In: Body
	*/
	Payload *rest_model.APIErrorEnvelope `json:"body,omitempty"`
}

// NewListEdgeRouterPoliciesTooManyRequests creates ListEdgeRouterPoliciesTooManyRequests with default headers values
func NewListEdgeRouterPoliciesTooManyRequests() *ListEdgeRouterPoliciesTooManyRequests {

	return &ListEdgeRouterPoliciesTooManyRequests{}
}

// WithPayload adds the payload to the list edge router policies too many requests response
func (o *ListEdgeRouterPoliciesTooManyRequests) WithPayload(payload *rest_model.APIErrorEnvelope) *ListEdgeRouterPoliciesTooManyRequests {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list edge router policies too many requests response
func (o *ListEdgeRouterPoliciesTooManyRequests) SetPayload(payload *rest_model.APIErrorEnvelope) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListEdgeRouterPoliciesTooManyRequests) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(429)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ListEdgeRouterPoliciesServiceUnavailableCode is the HTTP code returned for type ListEdgeRouterPoliciesServiceUnavailable
const ListEdgeRouterPoliciesServiceUnavailableCode int = 503

/*ListEdgeRouterPoliciesServiceUnavailable The request could not be completed due to the server being busy or in a temporarily bad state

swagger:response listEdgeRouterPoliciesServiceUnavailable
*/
type ListEdgeRouterPoliciesServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *rest_model.APIErrorEnvelope `json:"body,omitempty"`
}

// NewListEdgeRouterPoliciesServiceUnavailable creates ListEdgeRouterPoliciesServiceUnavailable with default headers values
func NewListEdgeRouterPoliciesServiceUnavailable() *ListEdgeRouterPoliciesServiceUnavailable {

	return &ListEdgeRouterPoliciesServiceUnavailable{}
}

// WithPayload adds the payload to the list edge router policies service unavailable response
func (o *ListEdgeRouterPoliciesServiceUnavailable) WithPayload(payload *rest_model.APIErrorEnvelope) *ListEdgeRouterPoliciesServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list edge router policies service unavailable response
func (o *ListEdgeRouterPoliciesServiceUnavailable) SetPayload(payload *rest_model.APIErrorEnvelope) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListEdgeRouterPoliciesServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
