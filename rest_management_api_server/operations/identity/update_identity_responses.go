// Code generated by go-swagger; DO NOT EDIT.

//
// Copyright NetFoundry Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// __          __              _
// \ \        / /             (_)
//  \ \  /\  / /_ _ _ __ _ __  _ _ __   __ _
//   \ \/  \/ / _` | '__| '_ \| | '_ \ / _` |
//    \  /\  / (_| | |  | | | | | | | | (_| | : This file is generated, do not edit it.
//     \/  \/ \__,_|_|  |_| |_|_|_| |_|\__, |
//                                      __/ |
//                                     |___/

package identity

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/openziti/edge-api/rest_model"
)

// UpdateIdentityOKCode is the HTTP code returned for type UpdateIdentityOK
const UpdateIdentityOKCode int = 200

/*UpdateIdentityOK The update request was successful and the resource has been altered

swagger:response updateIdentityOK
*/
type UpdateIdentityOK struct {

	/*
	  In: Body
	*/
	Payload *rest_model.Empty `json:"body,omitempty"`
}

// NewUpdateIdentityOK creates UpdateIdentityOK with default headers values
func NewUpdateIdentityOK() *UpdateIdentityOK {

	return &UpdateIdentityOK{}
}

// WithPayload adds the payload to the update identity o k response
func (o *UpdateIdentityOK) WithPayload(payload *rest_model.Empty) *UpdateIdentityOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update identity o k response
func (o *UpdateIdentityOK) SetPayload(payload *rest_model.Empty) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateIdentityOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateIdentityBadRequestCode is the HTTP code returned for type UpdateIdentityBadRequest
const UpdateIdentityBadRequestCode int = 400

/*UpdateIdentityBadRequest The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error's code, message, and cause fields can be inspected for further information

swagger:response updateIdentityBadRequest
*/
type UpdateIdentityBadRequest struct {

	/*
	  In: Body
	*/
	Payload *rest_model.APIErrorEnvelope `json:"body,omitempty"`
}

// NewUpdateIdentityBadRequest creates UpdateIdentityBadRequest with default headers values
func NewUpdateIdentityBadRequest() *UpdateIdentityBadRequest {

	return &UpdateIdentityBadRequest{}
}

// WithPayload adds the payload to the update identity bad request response
func (o *UpdateIdentityBadRequest) WithPayload(payload *rest_model.APIErrorEnvelope) *UpdateIdentityBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update identity bad request response
func (o *UpdateIdentityBadRequest) SetPayload(payload *rest_model.APIErrorEnvelope) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateIdentityBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateIdentityUnauthorizedCode is the HTTP code returned for type UpdateIdentityUnauthorized
const UpdateIdentityUnauthorizedCode int = 401

/*UpdateIdentityUnauthorized The supplied session does not have the correct access rights to request this resource

swagger:response updateIdentityUnauthorized
*/
type UpdateIdentityUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *rest_model.APIErrorEnvelope `json:"body,omitempty"`
}

// NewUpdateIdentityUnauthorized creates UpdateIdentityUnauthorized with default headers values
func NewUpdateIdentityUnauthorized() *UpdateIdentityUnauthorized {

	return &UpdateIdentityUnauthorized{}
}

// WithPayload adds the payload to the update identity unauthorized response
func (o *UpdateIdentityUnauthorized) WithPayload(payload *rest_model.APIErrorEnvelope) *UpdateIdentityUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update identity unauthorized response
func (o *UpdateIdentityUnauthorized) SetPayload(payload *rest_model.APIErrorEnvelope) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateIdentityUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateIdentityNotFoundCode is the HTTP code returned for type UpdateIdentityNotFound
const UpdateIdentityNotFoundCode int = 404

/*UpdateIdentityNotFound The requested resource does not exist

swagger:response updateIdentityNotFound
*/
type UpdateIdentityNotFound struct {

	/*
	  In: Body
	*/
	Payload *rest_model.APIErrorEnvelope `json:"body,omitempty"`
}

// NewUpdateIdentityNotFound creates UpdateIdentityNotFound with default headers values
func NewUpdateIdentityNotFound() *UpdateIdentityNotFound {

	return &UpdateIdentityNotFound{}
}

// WithPayload adds the payload to the update identity not found response
func (o *UpdateIdentityNotFound) WithPayload(payload *rest_model.APIErrorEnvelope) *UpdateIdentityNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update identity not found response
func (o *UpdateIdentityNotFound) SetPayload(payload *rest_model.APIErrorEnvelope) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateIdentityNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateIdentityTooManyRequestsCode is the HTTP code returned for type UpdateIdentityTooManyRequests
const UpdateIdentityTooManyRequestsCode int = 429

/*UpdateIdentityTooManyRequests The resource requested is rate limited and the rate limit has been exceeded

swagger:response updateIdentityTooManyRequests
*/
type UpdateIdentityTooManyRequests struct {

	/*
	  In: Body
	*/
	Payload *rest_model.APIErrorEnvelope `json:"body,omitempty"`
}

// NewUpdateIdentityTooManyRequests creates UpdateIdentityTooManyRequests with default headers values
func NewUpdateIdentityTooManyRequests() *UpdateIdentityTooManyRequests {

	return &UpdateIdentityTooManyRequests{}
}

// WithPayload adds the payload to the update identity too many requests response
func (o *UpdateIdentityTooManyRequests) WithPayload(payload *rest_model.APIErrorEnvelope) *UpdateIdentityTooManyRequests {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update identity too many requests response
func (o *UpdateIdentityTooManyRequests) SetPayload(payload *rest_model.APIErrorEnvelope) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateIdentityTooManyRequests) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(429)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateIdentityServiceUnavailableCode is the HTTP code returned for type UpdateIdentityServiceUnavailable
const UpdateIdentityServiceUnavailableCode int = 503

/*UpdateIdentityServiceUnavailable The request could not be completed due to the server being busy or in a temporarily bad state

swagger:response updateIdentityServiceUnavailable
*/
type UpdateIdentityServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *rest_model.APIErrorEnvelope `json:"body,omitempty"`
}

// NewUpdateIdentityServiceUnavailable creates UpdateIdentityServiceUnavailable with default headers values
func NewUpdateIdentityServiceUnavailable() *UpdateIdentityServiceUnavailable {

	return &UpdateIdentityServiceUnavailable{}
}

// WithPayload adds the payload to the update identity service unavailable response
func (o *UpdateIdentityServiceUnavailable) WithPayload(payload *rest_model.APIErrorEnvelope) *UpdateIdentityServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update identity service unavailable response
func (o *UpdateIdentityServiceUnavailable) SetPayload(payload *rest_model.APIErrorEnvelope) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateIdentityServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
