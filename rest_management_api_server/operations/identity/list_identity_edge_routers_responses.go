// Code generated by go-swagger; DO NOT EDIT.

//
// Copyright NetFoundry Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// __          __              _
// \ \        / /             (_)
//  \ \  /\  / /_ _ _ __ _ __  _ _ __   __ _
//   \ \/  \/ / _` | '__| '_ \| | '_ \ / _` |
//    \  /\  / (_| | |  | | | | | | | | (_| | : This file is generated, do not edit it.
//     \/  \/ \__,_|_|  |_| |_|_|_| |_|\__, |
//                                      __/ |
//                                     |___/

package identity

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/openziti/edge-api/rest_model"
)

// ListIdentityEdgeRoutersOKCode is the HTTP code returned for type ListIdentityEdgeRoutersOK
const ListIdentityEdgeRoutersOKCode int = 200

/*ListIdentityEdgeRoutersOK A list of edge routers

swagger:response listIdentityEdgeRoutersOK
*/
type ListIdentityEdgeRoutersOK struct {

	/*
	  In: Body
	*/
	Payload *rest_model.ListEdgeRoutersEnvelope `json:"body,omitempty"`
}

// NewListIdentityEdgeRoutersOK creates ListIdentityEdgeRoutersOK with default headers values
func NewListIdentityEdgeRoutersOK() *ListIdentityEdgeRoutersOK {

	return &ListIdentityEdgeRoutersOK{}
}

// WithPayload adds the payload to the list identity edge routers o k response
func (o *ListIdentityEdgeRoutersOK) WithPayload(payload *rest_model.ListEdgeRoutersEnvelope) *ListIdentityEdgeRoutersOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list identity edge routers o k response
func (o *ListIdentityEdgeRoutersOK) SetPayload(payload *rest_model.ListEdgeRoutersEnvelope) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListIdentityEdgeRoutersOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ListIdentityEdgeRoutersUnauthorizedCode is the HTTP code returned for type ListIdentityEdgeRoutersUnauthorized
const ListIdentityEdgeRoutersUnauthorizedCode int = 401

/*ListIdentityEdgeRoutersUnauthorized The supplied session does not have the correct access rights to request this resource

swagger:response listIdentityEdgeRoutersUnauthorized
*/
type ListIdentityEdgeRoutersUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *rest_model.APIErrorEnvelope `json:"body,omitempty"`
}

// NewListIdentityEdgeRoutersUnauthorized creates ListIdentityEdgeRoutersUnauthorized with default headers values
func NewListIdentityEdgeRoutersUnauthorized() *ListIdentityEdgeRoutersUnauthorized {

	return &ListIdentityEdgeRoutersUnauthorized{}
}

// WithPayload adds the payload to the list identity edge routers unauthorized response
func (o *ListIdentityEdgeRoutersUnauthorized) WithPayload(payload *rest_model.APIErrorEnvelope) *ListIdentityEdgeRoutersUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list identity edge routers unauthorized response
func (o *ListIdentityEdgeRoutersUnauthorized) SetPayload(payload *rest_model.APIErrorEnvelope) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListIdentityEdgeRoutersUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ListIdentityEdgeRoutersNotFoundCode is the HTTP code returned for type ListIdentityEdgeRoutersNotFound
const ListIdentityEdgeRoutersNotFoundCode int = 404

/*ListIdentityEdgeRoutersNotFound The requested resource does not exist

swagger:response listIdentityEdgeRoutersNotFound
*/
type ListIdentityEdgeRoutersNotFound struct {

	/*
	  In: Body
	*/
	Payload *rest_model.APIErrorEnvelope `json:"body,omitempty"`
}

// NewListIdentityEdgeRoutersNotFound creates ListIdentityEdgeRoutersNotFound with default headers values
func NewListIdentityEdgeRoutersNotFound() *ListIdentityEdgeRoutersNotFound {

	return &ListIdentityEdgeRoutersNotFound{}
}

// WithPayload adds the payload to the list identity edge routers not found response
func (o *ListIdentityEdgeRoutersNotFound) WithPayload(payload *rest_model.APIErrorEnvelope) *ListIdentityEdgeRoutersNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list identity edge routers not found response
func (o *ListIdentityEdgeRoutersNotFound) SetPayload(payload *rest_model.APIErrorEnvelope) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListIdentityEdgeRoutersNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ListIdentityEdgeRoutersTooManyRequestsCode is the HTTP code returned for type ListIdentityEdgeRoutersTooManyRequests
const ListIdentityEdgeRoutersTooManyRequestsCode int = 429

/*ListIdentityEdgeRoutersTooManyRequests The resource requested is rate limited and the rate limit has been exceeded

swagger:response listIdentityEdgeRoutersTooManyRequests
*/
type ListIdentityEdgeRoutersTooManyRequests struct {

	/*
	  In: Body
	*/
	Payload *rest_model.APIErrorEnvelope `json:"body,omitempty"`
}

// NewListIdentityEdgeRoutersTooManyRequests creates ListIdentityEdgeRoutersTooManyRequests with default headers values
func NewListIdentityEdgeRoutersTooManyRequests() *ListIdentityEdgeRoutersTooManyRequests {

	return &ListIdentityEdgeRoutersTooManyRequests{}
}

// WithPayload adds the payload to the list identity edge routers too many requests response
func (o *ListIdentityEdgeRoutersTooManyRequests) WithPayload(payload *rest_model.APIErrorEnvelope) *ListIdentityEdgeRoutersTooManyRequests {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list identity edge routers too many requests response
func (o *ListIdentityEdgeRoutersTooManyRequests) SetPayload(payload *rest_model.APIErrorEnvelope) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListIdentityEdgeRoutersTooManyRequests) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(429)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ListIdentityEdgeRoutersServiceUnavailableCode is the HTTP code returned for type ListIdentityEdgeRoutersServiceUnavailable
const ListIdentityEdgeRoutersServiceUnavailableCode int = 503

/*ListIdentityEdgeRoutersServiceUnavailable The request could not be completed due to the server being busy or in a temporarily bad state

swagger:response listIdentityEdgeRoutersServiceUnavailable
*/
type ListIdentityEdgeRoutersServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *rest_model.APIErrorEnvelope `json:"body,omitempty"`
}

// NewListIdentityEdgeRoutersServiceUnavailable creates ListIdentityEdgeRoutersServiceUnavailable with default headers values
func NewListIdentityEdgeRoutersServiceUnavailable() *ListIdentityEdgeRoutersServiceUnavailable {

	return &ListIdentityEdgeRoutersServiceUnavailable{}
}

// WithPayload adds the payload to the list identity edge routers service unavailable response
func (o *ListIdentityEdgeRoutersServiceUnavailable) WithPayload(payload *rest_model.APIErrorEnvelope) *ListIdentityEdgeRoutersServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list identity edge routers service unavailable response
func (o *ListIdentityEdgeRoutersServiceUnavailable) SetPayload(payload *rest_model.APIErrorEnvelope) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListIdentityEdgeRoutersServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
