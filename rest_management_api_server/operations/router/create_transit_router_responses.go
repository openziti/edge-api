// Code generated by go-swagger; DO NOT EDIT.

//
// Copyright NetFoundry Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// __          __              _
// \ \        / /             (_)
//  \ \  /\  / /_ _ _ __ _ __  _ _ __   __ _
//   \ \/  \/ / _` | '__| '_ \| | '_ \ / _` |
//    \  /\  / (_| | |  | | | | | | | | (_| | : This file is generated, do not edit it.
//     \/  \/ \__,_|_|  |_| |_|_|_| |_|\__, |
//                                      __/ |
//                                     |___/

package router

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/openziti/edge-api/rest_model"
)

// CreateTransitRouterCreatedCode is the HTTP code returned for type CreateTransitRouterCreated
const CreateTransitRouterCreatedCode int = 201

/*CreateTransitRouterCreated The create request was successful and the resource has been added at the following location

swagger:response createTransitRouterCreated
*/
type CreateTransitRouterCreated struct {

	/*
	  In: Body
	*/
	Payload *rest_model.CreateEnvelope `json:"body,omitempty"`
}

// NewCreateTransitRouterCreated creates CreateTransitRouterCreated with default headers values
func NewCreateTransitRouterCreated() *CreateTransitRouterCreated {

	return &CreateTransitRouterCreated{}
}

// WithPayload adds the payload to the create transit router created response
func (o *CreateTransitRouterCreated) WithPayload(payload *rest_model.CreateEnvelope) *CreateTransitRouterCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create transit router created response
func (o *CreateTransitRouterCreated) SetPayload(payload *rest_model.CreateEnvelope) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateTransitRouterCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateTransitRouterBadRequestCode is the HTTP code returned for type CreateTransitRouterBadRequest
const CreateTransitRouterBadRequestCode int = 400

/*CreateTransitRouterBadRequest The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error's code, message, and cause fields can be inspected for further information

swagger:response createTransitRouterBadRequest
*/
type CreateTransitRouterBadRequest struct {

	/*
	  In: Body
	*/
	Payload *rest_model.APIErrorEnvelope `json:"body,omitempty"`
}

// NewCreateTransitRouterBadRequest creates CreateTransitRouterBadRequest with default headers values
func NewCreateTransitRouterBadRequest() *CreateTransitRouterBadRequest {

	return &CreateTransitRouterBadRequest{}
}

// WithPayload adds the payload to the create transit router bad request response
func (o *CreateTransitRouterBadRequest) WithPayload(payload *rest_model.APIErrorEnvelope) *CreateTransitRouterBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create transit router bad request response
func (o *CreateTransitRouterBadRequest) SetPayload(payload *rest_model.APIErrorEnvelope) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateTransitRouterBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateTransitRouterUnauthorizedCode is the HTTP code returned for type CreateTransitRouterUnauthorized
const CreateTransitRouterUnauthorizedCode int = 401

/*CreateTransitRouterUnauthorized The supplied session does not have the correct access rights to request this resource

swagger:response createTransitRouterUnauthorized
*/
type CreateTransitRouterUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *rest_model.APIErrorEnvelope `json:"body,omitempty"`
}

// NewCreateTransitRouterUnauthorized creates CreateTransitRouterUnauthorized with default headers values
func NewCreateTransitRouterUnauthorized() *CreateTransitRouterUnauthorized {

	return &CreateTransitRouterUnauthorized{}
}

// WithPayload adds the payload to the create transit router unauthorized response
func (o *CreateTransitRouterUnauthorized) WithPayload(payload *rest_model.APIErrorEnvelope) *CreateTransitRouterUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create transit router unauthorized response
func (o *CreateTransitRouterUnauthorized) SetPayload(payload *rest_model.APIErrorEnvelope) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateTransitRouterUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateTransitRouterTooManyRequestsCode is the HTTP code returned for type CreateTransitRouterTooManyRequests
const CreateTransitRouterTooManyRequestsCode int = 429

/*CreateTransitRouterTooManyRequests The resource requested is rate limited and the rate limit has been exceeded

swagger:response createTransitRouterTooManyRequests
*/
type CreateTransitRouterTooManyRequests struct {

	/*
	  In: Body
	*/
	Payload *rest_model.APIErrorEnvelope `json:"body,omitempty"`
}

// NewCreateTransitRouterTooManyRequests creates CreateTransitRouterTooManyRequests with default headers values
func NewCreateTransitRouterTooManyRequests() *CreateTransitRouterTooManyRequests {

	return &CreateTransitRouterTooManyRequests{}
}

// WithPayload adds the payload to the create transit router too many requests response
func (o *CreateTransitRouterTooManyRequests) WithPayload(payload *rest_model.APIErrorEnvelope) *CreateTransitRouterTooManyRequests {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create transit router too many requests response
func (o *CreateTransitRouterTooManyRequests) SetPayload(payload *rest_model.APIErrorEnvelope) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateTransitRouterTooManyRequests) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(429)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateTransitRouterServiceUnavailableCode is the HTTP code returned for type CreateTransitRouterServiceUnavailable
const CreateTransitRouterServiceUnavailableCode int = 503

/*CreateTransitRouterServiceUnavailable The request could not be completed due to the server being busy or in a temporarily bad state

swagger:response createTransitRouterServiceUnavailable
*/
type CreateTransitRouterServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *rest_model.APIErrorEnvelope `json:"body,omitempty"`
}

// NewCreateTransitRouterServiceUnavailable creates CreateTransitRouterServiceUnavailable with default headers values
func NewCreateTransitRouterServiceUnavailable() *CreateTransitRouterServiceUnavailable {

	return &CreateTransitRouterServiceUnavailable{}
}

// WithPayload adds the payload to the create transit router service unavailable response
func (o *CreateTransitRouterServiceUnavailable) WithPayload(payload *rest_model.APIErrorEnvelope) *CreateTransitRouterServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create transit router service unavailable response
func (o *CreateTransitRouterServiceUnavailable) SetPayload(payload *rest_model.APIErrorEnvelope) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateTransitRouterServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
