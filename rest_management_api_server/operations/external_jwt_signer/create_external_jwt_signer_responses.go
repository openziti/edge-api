// Code generated by go-swagger; DO NOT EDIT.

//
// Copyright NetFoundry Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// __          __              _
// \ \        / /             (_)
//  \ \  /\  / /_ _ _ __ _ __  _ _ __   __ _
//   \ \/  \/ / _` | '__| '_ \| | '_ \ / _` |
//    \  /\  / (_| | |  | | | | | | | | (_| | : This file is generated, do not edit it.
//     \/  \/ \__,_|_|  |_| |_|_|_| |_|\__, |
//                                      __/ |
//                                     |___/

package external_jwt_signer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/openziti/edge-api/rest_model"
)

// CreateExternalJWTSignerCreatedCode is the HTTP code returned for type CreateExternalJWTSignerCreated
const CreateExternalJWTSignerCreatedCode int = 201

/*CreateExternalJWTSignerCreated The create request was successful and the resource has been added at the following location

swagger:response createExternalJwtSignerCreated
*/
type CreateExternalJWTSignerCreated struct {

	/*
	  In: Body
	*/
	Payload *rest_model.CreateEnvelope `json:"body,omitempty"`
}

// NewCreateExternalJWTSignerCreated creates CreateExternalJWTSignerCreated with default headers values
func NewCreateExternalJWTSignerCreated() *CreateExternalJWTSignerCreated {

	return &CreateExternalJWTSignerCreated{}
}

// WithPayload adds the payload to the create external Jwt signer created response
func (o *CreateExternalJWTSignerCreated) WithPayload(payload *rest_model.CreateEnvelope) *CreateExternalJWTSignerCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create external Jwt signer created response
func (o *CreateExternalJWTSignerCreated) SetPayload(payload *rest_model.CreateEnvelope) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateExternalJWTSignerCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateExternalJWTSignerBadRequestCode is the HTTP code returned for type CreateExternalJWTSignerBadRequest
const CreateExternalJWTSignerBadRequestCode int = 400

/*CreateExternalJWTSignerBadRequest The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error's code, message, and cause fields can be inspected for further information

swagger:response createExternalJwtSignerBadRequest
*/
type CreateExternalJWTSignerBadRequest struct {

	/*
	  In: Body
	*/
	Payload *rest_model.APIErrorEnvelope `json:"body,omitempty"`
}

// NewCreateExternalJWTSignerBadRequest creates CreateExternalJWTSignerBadRequest with default headers values
func NewCreateExternalJWTSignerBadRequest() *CreateExternalJWTSignerBadRequest {

	return &CreateExternalJWTSignerBadRequest{}
}

// WithPayload adds the payload to the create external Jwt signer bad request response
func (o *CreateExternalJWTSignerBadRequest) WithPayload(payload *rest_model.APIErrorEnvelope) *CreateExternalJWTSignerBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create external Jwt signer bad request response
func (o *CreateExternalJWTSignerBadRequest) SetPayload(payload *rest_model.APIErrorEnvelope) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateExternalJWTSignerBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateExternalJWTSignerUnauthorizedCode is the HTTP code returned for type CreateExternalJWTSignerUnauthorized
const CreateExternalJWTSignerUnauthorizedCode int = 401

/*CreateExternalJWTSignerUnauthorized The supplied session does not have the correct access rights to request this resource

swagger:response createExternalJwtSignerUnauthorized
*/
type CreateExternalJWTSignerUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *rest_model.APIErrorEnvelope `json:"body,omitempty"`
}

// NewCreateExternalJWTSignerUnauthorized creates CreateExternalJWTSignerUnauthorized with default headers values
func NewCreateExternalJWTSignerUnauthorized() *CreateExternalJWTSignerUnauthorized {

	return &CreateExternalJWTSignerUnauthorized{}
}

// WithPayload adds the payload to the create external Jwt signer unauthorized response
func (o *CreateExternalJWTSignerUnauthorized) WithPayload(payload *rest_model.APIErrorEnvelope) *CreateExternalJWTSignerUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create external Jwt signer unauthorized response
func (o *CreateExternalJWTSignerUnauthorized) SetPayload(payload *rest_model.APIErrorEnvelope) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateExternalJWTSignerUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateExternalJWTSignerTooManyRequestsCode is the HTTP code returned for type CreateExternalJWTSignerTooManyRequests
const CreateExternalJWTSignerTooManyRequestsCode int = 429

/*CreateExternalJWTSignerTooManyRequests The resource requested is rate limited and the rate limit has been exceeded

swagger:response createExternalJwtSignerTooManyRequests
*/
type CreateExternalJWTSignerTooManyRequests struct {

	/*
	  In: Body
	*/
	Payload *rest_model.APIErrorEnvelope `json:"body,omitempty"`
}

// NewCreateExternalJWTSignerTooManyRequests creates CreateExternalJWTSignerTooManyRequests with default headers values
func NewCreateExternalJWTSignerTooManyRequests() *CreateExternalJWTSignerTooManyRequests {

	return &CreateExternalJWTSignerTooManyRequests{}
}

// WithPayload adds the payload to the create external Jwt signer too many requests response
func (o *CreateExternalJWTSignerTooManyRequests) WithPayload(payload *rest_model.APIErrorEnvelope) *CreateExternalJWTSignerTooManyRequests {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create external Jwt signer too many requests response
func (o *CreateExternalJWTSignerTooManyRequests) SetPayload(payload *rest_model.APIErrorEnvelope) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateExternalJWTSignerTooManyRequests) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(429)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateExternalJWTSignerServiceUnavailableCode is the HTTP code returned for type CreateExternalJWTSignerServiceUnavailable
const CreateExternalJWTSignerServiceUnavailableCode int = 503

/*CreateExternalJWTSignerServiceUnavailable The request could not be completed due to the server being busy or in a temporarily bad state

swagger:response createExternalJwtSignerServiceUnavailable
*/
type CreateExternalJWTSignerServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *rest_model.APIErrorEnvelope `json:"body,omitempty"`
}

// NewCreateExternalJWTSignerServiceUnavailable creates CreateExternalJWTSignerServiceUnavailable with default headers values
func NewCreateExternalJWTSignerServiceUnavailable() *CreateExternalJWTSignerServiceUnavailable {

	return &CreateExternalJWTSignerServiceUnavailable{}
}

// WithPayload adds the payload to the create external Jwt signer service unavailable response
func (o *CreateExternalJWTSignerServiceUnavailable) WithPayload(payload *rest_model.APIErrorEnvelope) *CreateExternalJWTSignerServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create external Jwt signer service unavailable response
func (o *CreateExternalJWTSignerServiceUnavailable) SetPayload(payload *rest_model.APIErrorEnvelope) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateExternalJWTSignerServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
