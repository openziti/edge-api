// Code generated by go-swagger; DO NOT EDIT.

//
// Copyright NetFoundry Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// __          __              _
// \ \        / /             (_)
//  \ \  /\  / /_ _ _ __ _ __  _ _ __   __ _
//   \ \/  \/ / _` | '__| '_ \| | '_ \ / _` |
//    \  /\  / (_| | |  | | | | | | | | (_| | : This file is generated, do not edit it.
//     \/  \/ \__,_|_|  |_| |_|_|_| |_|\__, |
//                                      __/ |
//                                     |___/

package external_jwt_signer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/openziti/edge-api/rest_model"
)

// DeleteExternalJWTSignerOKCode is the HTTP code returned for type DeleteExternalJWTSignerOK
const DeleteExternalJWTSignerOKCode int = 200

/*DeleteExternalJWTSignerOK The delete request was successful and the resource has been removed

swagger:response deleteExternalJwtSignerOK
*/
type DeleteExternalJWTSignerOK struct {

	/*
	  In: Body
	*/
	Payload *rest_model.Empty `json:"body,omitempty"`
}

// NewDeleteExternalJWTSignerOK creates DeleteExternalJWTSignerOK with default headers values
func NewDeleteExternalJWTSignerOK() *DeleteExternalJWTSignerOK {

	return &DeleteExternalJWTSignerOK{}
}

// WithPayload adds the payload to the delete external Jwt signer o k response
func (o *DeleteExternalJWTSignerOK) WithPayload(payload *rest_model.Empty) *DeleteExternalJWTSignerOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete external Jwt signer o k response
func (o *DeleteExternalJWTSignerOK) SetPayload(payload *rest_model.Empty) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteExternalJWTSignerOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteExternalJWTSignerBadRequestCode is the HTTP code returned for type DeleteExternalJWTSignerBadRequest
const DeleteExternalJWTSignerBadRequestCode int = 400

/*DeleteExternalJWTSignerBadRequest The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error's code, message, and cause fields can be inspected for further information

swagger:response deleteExternalJwtSignerBadRequest
*/
type DeleteExternalJWTSignerBadRequest struct {

	/*
	  In: Body
	*/
	Payload *rest_model.APIErrorEnvelope `json:"body,omitempty"`
}

// NewDeleteExternalJWTSignerBadRequest creates DeleteExternalJWTSignerBadRequest with default headers values
func NewDeleteExternalJWTSignerBadRequest() *DeleteExternalJWTSignerBadRequest {

	return &DeleteExternalJWTSignerBadRequest{}
}

// WithPayload adds the payload to the delete external Jwt signer bad request response
func (o *DeleteExternalJWTSignerBadRequest) WithPayload(payload *rest_model.APIErrorEnvelope) *DeleteExternalJWTSignerBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete external Jwt signer bad request response
func (o *DeleteExternalJWTSignerBadRequest) SetPayload(payload *rest_model.APIErrorEnvelope) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteExternalJWTSignerBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteExternalJWTSignerUnauthorizedCode is the HTTP code returned for type DeleteExternalJWTSignerUnauthorized
const DeleteExternalJWTSignerUnauthorizedCode int = 401

/*DeleteExternalJWTSignerUnauthorized The supplied session does not have the correct access rights to request this resource

swagger:response deleteExternalJwtSignerUnauthorized
*/
type DeleteExternalJWTSignerUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *rest_model.APIErrorEnvelope `json:"body,omitempty"`
}

// NewDeleteExternalJWTSignerUnauthorized creates DeleteExternalJWTSignerUnauthorized with default headers values
func NewDeleteExternalJWTSignerUnauthorized() *DeleteExternalJWTSignerUnauthorized {

	return &DeleteExternalJWTSignerUnauthorized{}
}

// WithPayload adds the payload to the delete external Jwt signer unauthorized response
func (o *DeleteExternalJWTSignerUnauthorized) WithPayload(payload *rest_model.APIErrorEnvelope) *DeleteExternalJWTSignerUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete external Jwt signer unauthorized response
func (o *DeleteExternalJWTSignerUnauthorized) SetPayload(payload *rest_model.APIErrorEnvelope) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteExternalJWTSignerUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteExternalJWTSignerNotFoundCode is the HTTP code returned for type DeleteExternalJWTSignerNotFound
const DeleteExternalJWTSignerNotFoundCode int = 404

/*DeleteExternalJWTSignerNotFound The requested resource does not exist

swagger:response deleteExternalJwtSignerNotFound
*/
type DeleteExternalJWTSignerNotFound struct {

	/*
	  In: Body
	*/
	Payload *rest_model.APIErrorEnvelope `json:"body,omitempty"`
}

// NewDeleteExternalJWTSignerNotFound creates DeleteExternalJWTSignerNotFound with default headers values
func NewDeleteExternalJWTSignerNotFound() *DeleteExternalJWTSignerNotFound {

	return &DeleteExternalJWTSignerNotFound{}
}

// WithPayload adds the payload to the delete external Jwt signer not found response
func (o *DeleteExternalJWTSignerNotFound) WithPayload(payload *rest_model.APIErrorEnvelope) *DeleteExternalJWTSignerNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete external Jwt signer not found response
func (o *DeleteExternalJWTSignerNotFound) SetPayload(payload *rest_model.APIErrorEnvelope) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteExternalJWTSignerNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteExternalJWTSignerTooManyRequestsCode is the HTTP code returned for type DeleteExternalJWTSignerTooManyRequests
const DeleteExternalJWTSignerTooManyRequestsCode int = 429

/*DeleteExternalJWTSignerTooManyRequests The resource requested is rate limited and the rate limit has been exceeded

swagger:response deleteExternalJwtSignerTooManyRequests
*/
type DeleteExternalJWTSignerTooManyRequests struct {

	/*
	  In: Body
	*/
	Payload *rest_model.APIErrorEnvelope `json:"body,omitempty"`
}

// NewDeleteExternalJWTSignerTooManyRequests creates DeleteExternalJWTSignerTooManyRequests with default headers values
func NewDeleteExternalJWTSignerTooManyRequests() *DeleteExternalJWTSignerTooManyRequests {

	return &DeleteExternalJWTSignerTooManyRequests{}
}

// WithPayload adds the payload to the delete external Jwt signer too many requests response
func (o *DeleteExternalJWTSignerTooManyRequests) WithPayload(payload *rest_model.APIErrorEnvelope) *DeleteExternalJWTSignerTooManyRequests {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete external Jwt signer too many requests response
func (o *DeleteExternalJWTSignerTooManyRequests) SetPayload(payload *rest_model.APIErrorEnvelope) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteExternalJWTSignerTooManyRequests) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(429)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
