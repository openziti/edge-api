// Code generated by go-swagger; DO NOT EDIT.

//
// Copyright NetFoundry Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// __          __              _
// \ \        / /             (_)
//  \ \  /\  / /_ _ _ __ _ __  _ _ __   __ _
//   \ \/  \/ / _` | '__| '_ \| | '_ \ / _` |
//    \  /\  / (_| | |  | | | | | | | | (_| | : This file is generated, do not edit it.
//     \/  \/ \__,_|_|  |_| |_|_|_| |_|\__, |
//                                      __/ |
//                                     |___/

package settings

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/openziti/edge-api/rest_model"
)

// ListControllerSettingsOKCode is the HTTP code returned for type ListControllerSettingsOK
const ListControllerSettingsOKCode int = 200

/*ListControllerSettingsOK A list of controller setting objects

swagger:response listControllerSettingsOK
*/
type ListControllerSettingsOK struct {

	/*
	  In: Body
	*/
	Payload *rest_model.ListControllerSettingEnvelope `json:"body,omitempty"`
}

// NewListControllerSettingsOK creates ListControllerSettingsOK with default headers values
func NewListControllerSettingsOK() *ListControllerSettingsOK {

	return &ListControllerSettingsOK{}
}

// WithPayload adds the payload to the list controller settings o k response
func (o *ListControllerSettingsOK) WithPayload(payload *rest_model.ListControllerSettingEnvelope) *ListControllerSettingsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list controller settings o k response
func (o *ListControllerSettingsOK) SetPayload(payload *rest_model.ListControllerSettingEnvelope) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListControllerSettingsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ListControllerSettingsBadRequestCode is the HTTP code returned for type ListControllerSettingsBadRequest
const ListControllerSettingsBadRequestCode int = 400

/*ListControllerSettingsBadRequest The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error's code, message, and cause fields can be inspected for further information

swagger:response listControllerSettingsBadRequest
*/
type ListControllerSettingsBadRequest struct {

	/*
	  In: Body
	*/
	Payload *rest_model.APIErrorEnvelope `json:"body,omitempty"`
}

// NewListControllerSettingsBadRequest creates ListControllerSettingsBadRequest with default headers values
func NewListControllerSettingsBadRequest() *ListControllerSettingsBadRequest {

	return &ListControllerSettingsBadRequest{}
}

// WithPayload adds the payload to the list controller settings bad request response
func (o *ListControllerSettingsBadRequest) WithPayload(payload *rest_model.APIErrorEnvelope) *ListControllerSettingsBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list controller settings bad request response
func (o *ListControllerSettingsBadRequest) SetPayload(payload *rest_model.APIErrorEnvelope) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListControllerSettingsBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ListControllerSettingsUnauthorizedCode is the HTTP code returned for type ListControllerSettingsUnauthorized
const ListControllerSettingsUnauthorizedCode int = 401

/*ListControllerSettingsUnauthorized The supplied session does not have the correct access rights to request this resource

swagger:response listControllerSettingsUnauthorized
*/
type ListControllerSettingsUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *rest_model.APIErrorEnvelope `json:"body,omitempty"`
}

// NewListControllerSettingsUnauthorized creates ListControllerSettingsUnauthorized with default headers values
func NewListControllerSettingsUnauthorized() *ListControllerSettingsUnauthorized {

	return &ListControllerSettingsUnauthorized{}
}

// WithPayload adds the payload to the list controller settings unauthorized response
func (o *ListControllerSettingsUnauthorized) WithPayload(payload *rest_model.APIErrorEnvelope) *ListControllerSettingsUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list controller settings unauthorized response
func (o *ListControllerSettingsUnauthorized) SetPayload(payload *rest_model.APIErrorEnvelope) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListControllerSettingsUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ListControllerSettingsTooManyRequestsCode is the HTTP code returned for type ListControllerSettingsTooManyRequests
const ListControllerSettingsTooManyRequestsCode int = 429

/*ListControllerSettingsTooManyRequests The resource requested is rate limited and the rate limit has been exceeded

swagger:response listControllerSettingsTooManyRequests
*/
type ListControllerSettingsTooManyRequests struct {

	/*
	  In: Body
	*/
	Payload *rest_model.APIErrorEnvelope `json:"body,omitempty"`
}

// NewListControllerSettingsTooManyRequests creates ListControllerSettingsTooManyRequests with default headers values
func NewListControllerSettingsTooManyRequests() *ListControllerSettingsTooManyRequests {

	return &ListControllerSettingsTooManyRequests{}
}

// WithPayload adds the payload to the list controller settings too many requests response
func (o *ListControllerSettingsTooManyRequests) WithPayload(payload *rest_model.APIErrorEnvelope) *ListControllerSettingsTooManyRequests {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list controller settings too many requests response
func (o *ListControllerSettingsTooManyRequests) SetPayload(payload *rest_model.APIErrorEnvelope) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListControllerSettingsTooManyRequests) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(429)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
