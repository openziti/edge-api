// Code generated by go-swagger; DO NOT EDIT.

//
// Copyright NetFoundry Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// __          __              _
// \ \        / /             (_)
//  \ \  /\  / /_ _ _ __ _ __  _ _ __   __ _
//   \ \/  \/ / _` | '__| '_ \| | '_ \ / _` |
//    \  /\  / (_| | |  | | | | | | | | (_| | : This file is generated, do not edit it.
//     \/  \/ \__,_|_|  |_| |_|_|_| |_|\__, |
//                                      __/ |
//                                     |___/

package session

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/openziti/edge-api/rest_model"
)

// DetailSessionRoutePathOKCode is the HTTP code returned for type DetailSessionRoutePathOK
const DetailSessionRoutePathOKCode int = 200

/*DetailSessionRoutePathOK A single session's route path

swagger:response detailSessionRoutePathOK
*/
type DetailSessionRoutePathOK struct {

	/*
	  In: Body
	*/
	Payload *rest_model.DetailSessionRoutePathEnvelope `json:"body,omitempty"`
}

// NewDetailSessionRoutePathOK creates DetailSessionRoutePathOK with default headers values
func NewDetailSessionRoutePathOK() *DetailSessionRoutePathOK {

	return &DetailSessionRoutePathOK{}
}

// WithPayload adds the payload to the detail session route path o k response
func (o *DetailSessionRoutePathOK) WithPayload(payload *rest_model.DetailSessionRoutePathEnvelope) *DetailSessionRoutePathOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the detail session route path o k response
func (o *DetailSessionRoutePathOK) SetPayload(payload *rest_model.DetailSessionRoutePathEnvelope) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DetailSessionRoutePathOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DetailSessionRoutePathUnauthorizedCode is the HTTP code returned for type DetailSessionRoutePathUnauthorized
const DetailSessionRoutePathUnauthorizedCode int = 401

/*DetailSessionRoutePathUnauthorized The supplied session does not have the correct access rights to request this resource

swagger:response detailSessionRoutePathUnauthorized
*/
type DetailSessionRoutePathUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *rest_model.APIErrorEnvelope `json:"body,omitempty"`
}

// NewDetailSessionRoutePathUnauthorized creates DetailSessionRoutePathUnauthorized with default headers values
func NewDetailSessionRoutePathUnauthorized() *DetailSessionRoutePathUnauthorized {

	return &DetailSessionRoutePathUnauthorized{}
}

// WithPayload adds the payload to the detail session route path unauthorized response
func (o *DetailSessionRoutePathUnauthorized) WithPayload(payload *rest_model.APIErrorEnvelope) *DetailSessionRoutePathUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the detail session route path unauthorized response
func (o *DetailSessionRoutePathUnauthorized) SetPayload(payload *rest_model.APIErrorEnvelope) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DetailSessionRoutePathUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DetailSessionRoutePathNotFoundCode is the HTTP code returned for type DetailSessionRoutePathNotFound
const DetailSessionRoutePathNotFoundCode int = 404

/*DetailSessionRoutePathNotFound The requested resource does not exist

swagger:response detailSessionRoutePathNotFound
*/
type DetailSessionRoutePathNotFound struct {

	/*
	  In: Body
	*/
	Payload *rest_model.APIErrorEnvelope `json:"body,omitempty"`
}

// NewDetailSessionRoutePathNotFound creates DetailSessionRoutePathNotFound with default headers values
func NewDetailSessionRoutePathNotFound() *DetailSessionRoutePathNotFound {

	return &DetailSessionRoutePathNotFound{}
}

// WithPayload adds the payload to the detail session route path not found response
func (o *DetailSessionRoutePathNotFound) WithPayload(payload *rest_model.APIErrorEnvelope) *DetailSessionRoutePathNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the detail session route path not found response
func (o *DetailSessionRoutePathNotFound) SetPayload(payload *rest_model.APIErrorEnvelope) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DetailSessionRoutePathNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DetailSessionRoutePathTooManyRequestsCode is the HTTP code returned for type DetailSessionRoutePathTooManyRequests
const DetailSessionRoutePathTooManyRequestsCode int = 429

/*DetailSessionRoutePathTooManyRequests The resource requested is rate limited and the rate limit has been exceeded

swagger:response detailSessionRoutePathTooManyRequests
*/
type DetailSessionRoutePathTooManyRequests struct {

	/*
	  In: Body
	*/
	Payload *rest_model.APIErrorEnvelope `json:"body,omitempty"`
}

// NewDetailSessionRoutePathTooManyRequests creates DetailSessionRoutePathTooManyRequests with default headers values
func NewDetailSessionRoutePathTooManyRequests() *DetailSessionRoutePathTooManyRequests {

	return &DetailSessionRoutePathTooManyRequests{}
}

// WithPayload adds the payload to the detail session route path too many requests response
func (o *DetailSessionRoutePathTooManyRequests) WithPayload(payload *rest_model.APIErrorEnvelope) *DetailSessionRoutePathTooManyRequests {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the detail session route path too many requests response
func (o *DetailSessionRoutePathTooManyRequests) SetPayload(payload *rest_model.APIErrorEnvelope) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DetailSessionRoutePathTooManyRequests) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(429)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DetailSessionRoutePathServiceUnavailableCode is the HTTP code returned for type DetailSessionRoutePathServiceUnavailable
const DetailSessionRoutePathServiceUnavailableCode int = 503

/*DetailSessionRoutePathServiceUnavailable The request could not be completed due to the server being busy or in a temporarily bad state

swagger:response detailSessionRoutePathServiceUnavailable
*/
type DetailSessionRoutePathServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *rest_model.APIErrorEnvelope `json:"body,omitempty"`
}

// NewDetailSessionRoutePathServiceUnavailable creates DetailSessionRoutePathServiceUnavailable with default headers values
func NewDetailSessionRoutePathServiceUnavailable() *DetailSessionRoutePathServiceUnavailable {

	return &DetailSessionRoutePathServiceUnavailable{}
}

// WithPayload adds the payload to the detail session route path service unavailable response
func (o *DetailSessionRoutePathServiceUnavailable) WithPayload(payload *rest_model.APIErrorEnvelope) *DetailSessionRoutePathServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the detail session route path service unavailable response
func (o *DetailSessionRoutePathServiceUnavailable) SetPayload(payload *rest_model.APIErrorEnvelope) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DetailSessionRoutePathServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
