// Code generated by go-swagger; DO NOT EDIT.

//
// Copyright NetFoundry Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// __          __              _
// \ \        / /             (_)
//  \ \  /\  / /_ _ _ __ _ __  _ _ __   __ _
//   \ \/  \/ / _` | '__| '_ \| | '_ \ / _` |
//    \  /\  / (_| | |  | | | | | | | | (_| | : This file is generated, do not edit it.
//     \/  \/ \__,_|_|  |_| |_|_|_| |_|\__, |
//                                      __/ |
//                                     |___/

package current_api_session

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/openziti/edge-api/rest_model"
)

// DetailCurrentAPISessionCertificateOKCode is the HTTP code returned for type DetailCurrentAPISessionCertificateOK
const DetailCurrentAPISessionCertificateOKCode int = 200

/*DetailCurrentAPISessionCertificateOK A response containing a single API Session certificate

swagger:response detailCurrentApiSessionCertificateOK
*/
type DetailCurrentAPISessionCertificateOK struct {

	/*
	  In: Body
	*/
	Payload *rest_model.DetailCurrentAPISessionCertificateEnvelope `json:"body,omitempty"`
}

// NewDetailCurrentAPISessionCertificateOK creates DetailCurrentAPISessionCertificateOK with default headers values
func NewDetailCurrentAPISessionCertificateOK() *DetailCurrentAPISessionCertificateOK {

	return &DetailCurrentAPISessionCertificateOK{}
}

// WithPayload adds the payload to the detail current Api session certificate o k response
func (o *DetailCurrentAPISessionCertificateOK) WithPayload(payload *rest_model.DetailCurrentAPISessionCertificateEnvelope) *DetailCurrentAPISessionCertificateOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the detail current Api session certificate o k response
func (o *DetailCurrentAPISessionCertificateOK) SetPayload(payload *rest_model.DetailCurrentAPISessionCertificateEnvelope) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DetailCurrentAPISessionCertificateOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DetailCurrentAPISessionCertificateUnauthorizedCode is the HTTP code returned for type DetailCurrentAPISessionCertificateUnauthorized
const DetailCurrentAPISessionCertificateUnauthorizedCode int = 401

/*DetailCurrentAPISessionCertificateUnauthorized The supplied session does not have the correct access rights to request this resource

swagger:response detailCurrentApiSessionCertificateUnauthorized
*/
type DetailCurrentAPISessionCertificateUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *rest_model.APIErrorEnvelope `json:"body,omitempty"`
}

// NewDetailCurrentAPISessionCertificateUnauthorized creates DetailCurrentAPISessionCertificateUnauthorized with default headers values
func NewDetailCurrentAPISessionCertificateUnauthorized() *DetailCurrentAPISessionCertificateUnauthorized {

	return &DetailCurrentAPISessionCertificateUnauthorized{}
}

// WithPayload adds the payload to the detail current Api session certificate unauthorized response
func (o *DetailCurrentAPISessionCertificateUnauthorized) WithPayload(payload *rest_model.APIErrorEnvelope) *DetailCurrentAPISessionCertificateUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the detail current Api session certificate unauthorized response
func (o *DetailCurrentAPISessionCertificateUnauthorized) SetPayload(payload *rest_model.APIErrorEnvelope) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DetailCurrentAPISessionCertificateUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DetailCurrentAPISessionCertificateNotFoundCode is the HTTP code returned for type DetailCurrentAPISessionCertificateNotFound
const DetailCurrentAPISessionCertificateNotFoundCode int = 404

/*DetailCurrentAPISessionCertificateNotFound The requested resource does not exist

swagger:response detailCurrentApiSessionCertificateNotFound
*/
type DetailCurrentAPISessionCertificateNotFound struct {

	/*
	  In: Body
	*/
	Payload *rest_model.APIErrorEnvelope `json:"body,omitempty"`
}

// NewDetailCurrentAPISessionCertificateNotFound creates DetailCurrentAPISessionCertificateNotFound with default headers values
func NewDetailCurrentAPISessionCertificateNotFound() *DetailCurrentAPISessionCertificateNotFound {

	return &DetailCurrentAPISessionCertificateNotFound{}
}

// WithPayload adds the payload to the detail current Api session certificate not found response
func (o *DetailCurrentAPISessionCertificateNotFound) WithPayload(payload *rest_model.APIErrorEnvelope) *DetailCurrentAPISessionCertificateNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the detail current Api session certificate not found response
func (o *DetailCurrentAPISessionCertificateNotFound) SetPayload(payload *rest_model.APIErrorEnvelope) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DetailCurrentAPISessionCertificateNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DetailCurrentAPISessionCertificateTooManyRequestsCode is the HTTP code returned for type DetailCurrentAPISessionCertificateTooManyRequests
const DetailCurrentAPISessionCertificateTooManyRequestsCode int = 429

/*DetailCurrentAPISessionCertificateTooManyRequests The resource requested is rate limited and the rate limit has been exceeded

swagger:response detailCurrentApiSessionCertificateTooManyRequests
*/
type DetailCurrentAPISessionCertificateTooManyRequests struct {

	/*
	  In: Body
	*/
	Payload *rest_model.APIErrorEnvelope `json:"body,omitempty"`
}

// NewDetailCurrentAPISessionCertificateTooManyRequests creates DetailCurrentAPISessionCertificateTooManyRequests with default headers values
func NewDetailCurrentAPISessionCertificateTooManyRequests() *DetailCurrentAPISessionCertificateTooManyRequests {

	return &DetailCurrentAPISessionCertificateTooManyRequests{}
}

// WithPayload adds the payload to the detail current Api session certificate too many requests response
func (o *DetailCurrentAPISessionCertificateTooManyRequests) WithPayload(payload *rest_model.APIErrorEnvelope) *DetailCurrentAPISessionCertificateTooManyRequests {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the detail current Api session certificate too many requests response
func (o *DetailCurrentAPISessionCertificateTooManyRequests) SetPayload(payload *rest_model.APIErrorEnvelope) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DetailCurrentAPISessionCertificateTooManyRequests) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(429)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DetailCurrentAPISessionCertificateServiceUnavailableCode is the HTTP code returned for type DetailCurrentAPISessionCertificateServiceUnavailable
const DetailCurrentAPISessionCertificateServiceUnavailableCode int = 503

/*DetailCurrentAPISessionCertificateServiceUnavailable The request could not be completed due to the server being busy or in a temporarily bad state

swagger:response detailCurrentApiSessionCertificateServiceUnavailable
*/
type DetailCurrentAPISessionCertificateServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *rest_model.APIErrorEnvelope `json:"body,omitempty"`
}

// NewDetailCurrentAPISessionCertificateServiceUnavailable creates DetailCurrentAPISessionCertificateServiceUnavailable with default headers values
func NewDetailCurrentAPISessionCertificateServiceUnavailable() *DetailCurrentAPISessionCertificateServiceUnavailable {

	return &DetailCurrentAPISessionCertificateServiceUnavailable{}
}

// WithPayload adds the payload to the detail current Api session certificate service unavailable response
func (o *DetailCurrentAPISessionCertificateServiceUnavailable) WithPayload(payload *rest_model.APIErrorEnvelope) *DetailCurrentAPISessionCertificateServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the detail current Api session certificate service unavailable response
func (o *DetailCurrentAPISessionCertificateServiceUnavailable) SetPayload(payload *rest_model.APIErrorEnvelope) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DetailCurrentAPISessionCertificateServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
